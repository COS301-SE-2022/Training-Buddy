{"version":3,"file":"main.js","mappings":"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","sources":["webpack://training-buddy/./apps/api/src/app/app.module.ts","webpack://training-buddy/./apps/api/src/main.ts","webpack://training-buddy/./libs/api/example/api/feature/src/index.ts","webpack://training-buddy/./libs/api/example/api/feature/src/lib/feature.controller.ts","webpack://training-buddy/./libs/api/example/api/feature/src/lib/feature.module.ts","webpack://training-buddy/./libs/api/internal-api/api/shared/interfaces/data-access/src/index.ts","webpack://training-buddy/./libs/api/internal-api/api/shared/interfaces/data-access/src/lib/activity-log.ts","webpack://training-buddy/./libs/api/internal-api/api/shared/interfaces/data-access/src/lib/activity-schedule.ts","webpack://training-buddy/./libs/api/internal-api/api/shared/interfaces/data-access/src/lib/activity-stat.ts","webpack://training-buddy/./libs/api/internal-api/api/shared/interfaces/data-access/src/lib/api-internal-api-api-shared-interfaces-data-access.module.ts","webpack://training-buddy/./libs/api/internal-api/api/shared/interfaces/data-access/src/lib/error-message.ts","webpack://training-buddy/./libs/api/internal-api/api/shared/interfaces/data-access/src/lib/invite.ts","webpack://training-buddy/./libs/api/internal-api/api/shared/interfaces/data-access/src/lib/login-input.ts","webpack://training-buddy/./libs/api/internal-api/api/shared/interfaces/data-access/src/lib/login-response.ts","webpack://training-buddy/./libs/api/internal-api/api/shared/interfaces/data-access/src/lib/metric.ts","webpack://training-buddy/./libs/api/internal-api/api/shared/interfaces/data-access/src/lib/response-logs.ts","webpack://training-buddy/./libs/api/internal-api/api/shared/interfaces/data-access/src/lib/response-workout.ts","webpack://training-buddy/./libs/api/internal-api/api/shared/interfaces/data-access/src/lib/tokens.ts","webpack://training-buddy/./libs/api/internal-api/api/shared/interfaces/data-access/src/lib/update-user.ts","webpack://training-buddy/./libs/api/internal-api/api/shared/interfaces/data-access/src/lib/user-dto.ts","webpack://training-buddy/./libs/api/internal-api/api/shared/interfaces/data-access/src/lib/user-stat-res.ts","webpack://training-buddy/./libs/api/internal-api/api/shared/interfaces/data-access/src/lib/user.entity.ts","webpack://training-buddy/./libs/api/internal-api/api/shared/interfaces/data-access/src/lib/userconfig.ts","webpack://training-buddy/./libs/api/internal-api/api/training-buddy-api/src/index.ts","webpack://training-buddy/./libs/api/internal-api/api/training-buddy-api/src/lib/api-internal-api-api-training-buddy-api.module.ts","webpack://training-buddy/./libs/api/internal-api/api/training-buddy-api/src/lib/training-buddy-api.resolver.ts","webpack://training-buddy/./libs/api/internal-api/repository/data-access/src/index.ts","webpack://training-buddy/./libs/api/internal-api/repository/data-access/src/lib/api-internal-api-repository-data-access.module.ts","webpack://training-buddy/./libs/api/internal-api/repository/data-access/src/lib/api-internal-api-repository-data-access.service.ts","webpack://training-buddy/./libs/api/internal-api/service/training-buddy-service/src/index.ts","webpack://training-buddy/./libs/api/internal-api/service/training-buddy-service/src/lib/api-internal-api-service-training-buddy-service.module.ts","webpack://training-buddy/./libs/api/internal-api/service/training-buddy-service/src/lib/jwt-auth.guard.ts","webpack://training-buddy/./libs/api/internal-api/service/training-buddy-service/src/lib/jwt-strategy.ts","webpack://training-buddy/./libs/api/internal-api/service/training-buddy-service/src/lib/local.strategy.ts","webpack://training-buddy/./libs/api/internal-api/service/training-buddy-service/src/lib/login.guard.ts","webpack://training-buddy/./libs/api/internal-api/service/training-buddy-service/src/lib/training-buddy-service.service.ts","webpack://training-buddy/./libs/api/shell/feature/src/index.ts","webpack://training-buddy/./libs/api/shell/feature/src/lib/api-shell-feature.module.ts","webpack://training-buddy/external commonjs \"@nestjs/apollo\"","webpack://training-buddy/external commonjs \"@nestjs/common\"","webpack://training-buddy/external commonjs \"@nestjs/core\"","webpack://training-buddy/external commonjs \"@nestjs/graphql\"","webpack://training-buddy/external commonjs \"@nestjs/jwt\"","webpack://training-buddy/external commonjs \"@nestjs/passport\"","webpack://training-buddy/external commonjs \"@nestjs/platform-express\"","webpack://training-buddy/external commonjs \"axios\"","webpack://training-buddy/external commonjs \"bcrypt\"","webpack://training-buddy/external commonjs \"cors\"","webpack://training-buddy/external commonjs \"express\"","webpack://training-buddy/external commonjs \"firebase-admin\"","webpack://training-buddy/external commonjs \"firebase-functions\"","webpack://training-buddy/external commonjs \"graphql-subscriptions\"","webpack://training-buddy/external commonjs \"js-sha256\"","webpack://training-buddy/external commonjs \"passport-jwt\"","webpack://training-buddy/external commonjs \"passport-local\"","webpack://training-buddy/external commonjs \"rxjs\"","webpack://training-buddy/external commonjs \"tslib\"","webpack://training-buddy/external commonjs \"uuid\"","webpack://training-buddy/webpack/bootstrap","webpack://training-buddy/webpack/before-startup","webpack://training-buddy/webpack/startup","webpack://training-buddy/webpack/after-startup"],"sourcesContent":["import { ApiShellFeatureModule } from '@training-buddy/api/shell/feature';\r\nimport { Module } from '@nestjs/common';\r\n@Module({\r\n  imports: [ApiShellFeatureModule],\r\n})\r\nexport class AppModule {}\r\n","/* eslint-disable @typescript-eslint/no-var-requires */\r\n/**\r\n * This is not a production server yet!\r\n * This is only a minimal backend to get started.\r\n */\r\n\r\nimport { Logger } from '@nestjs/common';\r\nimport { NestFactory } from '@nestjs/core';\r\nimport { AppModule } from './app/app.module';\r\nimport * as admin from \"firebase-admin\"\r\nimport {ExpressAdapter, NestExpressApplication} from '@nestjs/platform-express';\r\nimport * as express from 'express';\r\nimport * as functions from 'firebase-functions';\r\nimport { ApiInternalApiRepositoryDataAccessService } from '@training-buddy/api/internal-api/repository/data-access';\r\n\r\nconst cors = require('cors');\r\nconst corsOptions ={\r\n    origin:'*', \r\n    credentials:true,\r\n    method: [\"POST\", \"GET\"],            //access-control-allow-credentials:true\r\n    optionSuccessStatus:200\r\n}\r\n\r\nconst repo = new ApiInternalApiRepositoryDataAccessService() ;\r\n\r\n\r\nconst serviceAccount = require('./training-buddy-2022-firebase-adminsdk-uine6-59d810bb2a.json')\r\nconst server: express.Express = express();\r\nexport const createNestServer = async (expressInstance: express.Express) => {\r\n  admin.initializeApp({\r\n    credential: admin.credential.cert(serviceAccount),\r\n    databaseURL: process.env.DATABASE_URL,\r\n  });\r\n  const adapter = new ExpressAdapter(expressInstance);\r\n  const app = await NestFactory.create<NestExpressApplication>(\r\n    AppModule, adapter, {cors:true},\r\n  );\r\n  app.enableCors();\r\n  return app.init();\r\n};\r\n\r\n//create endpoint for webhook\r\n  server.post('/webhook',(req,res) => {\r\n    console.log('webhook event received!', req.query, req.body) ;\r\n    if(req.body.aspect_type == \"create\")\r\n      if(req.body.object_type == \"activity\"){\r\n        console.log(\"storing\");\r\n        console.log(\"logged object id: \"+req.body.object_id) ;\r\n        console.log(\"logged owner id: \"+req.body.owner_id) ;\r\n        repo.logStrava(req.body.object_id.toString(), req.body.owner_id.toString()) ;\r\n      }\r\n    res.status(200).send('EVENT_RECEIVED') ;\r\n  })\r\n\r\n//add support for GET requests to webhook\r\n\r\nserver.get('/webhook',(req,res) => {\r\n  const VERIFY_TOKEN = \"STRAVA\" ;\r\n  console.log(\"get request received\") ;\r\n  const mode = req.query['hub.mode'];\r\n  const token = req.query['hub.verify_token'];\r\n  const challenge = req.query['hub.challenge'];\r\n\r\n  if(mode && token){\r\n    if(mode === 'subscribe' && token === VERIFY_TOKEN){\r\n      console.log('WEBHOOK_VERIFIED') ;\r\n      res.json({\"hub.challenge\":challenge}) ;\r\n    }else {\r\n      res.sendStatus(403) ;\r\n    }\r\n  }\r\n});\r\n\r\ncreateNestServer(server)\r\n  .then(v => console.log('Nest Ready'))\r\n  .catch(err => console.error('Nest broken', err));\r\nexport const api: functions.HttpsFunction = functions.https.onRequest(server);\r\n\r\nasync function bootstrap() {\r\n  const app = await NestFactory.create(AppModule);\r\n  const globalPrefix = 'graphql';\r\n  app.setGlobalPrefix(globalPrefix);\r\n  const port =3333;\r\n\r\n  await app.listen(port);\r\n  Logger.log(\r\n    `🚀 Application is running on: http://localhost:${port}/${globalPrefix}`\r\n  );\r\n\r\n  // //WEBHOOKS\r\n  // //create http server and set port\r\n  // const server = express().use(bodyParser.json) ;\r\n  // server.listen(4040, () => console.log('webhook listening')) ;\r\n}\r\n\r\nbootstrap();\r\n","export * from './lib/feature.module';\r\n","import { Controller, Get } from '@nestjs/common';\r\n\r\n@Controller('example')\r\nexport class FeatureController {\r\n  @Get()\r\n  findAll(): string {\r\n    return 'This action returns all examples';\r\n  }\r\n}\r\n","import { Module } from '@nestjs/common';\r\nimport { FeatureController } from './feature.controller';\r\n\r\n@Module({\r\n  controllers: [FeatureController],\r\n})\r\nexport class FeatureModule {}\r\n","export * from './lib/api-internal-api-api-shared-interfaces-data-access.module';\r\nexport * from './lib/user-dto'\r\nexport * from './lib/user.entity'\r\nexport * from './lib/login-response'\r\nexport * from './lib/login-input'\r\nexport * from './lib/error-message'\r\nexport * from './lib/activity-stat'\r\nexport * from './lib/user-stat-res'\r\nexport * from './lib/update-user'\r\nexport * from './lib/userconfig'\r\nexport * from './lib/activity-log'\r\nexport * from './lib/activity-schedule'\r\nexport * from './lib/response-logs'\r\nexport * from './lib/response-workout'\r\nexport * from './lib/metric'\r\nexport * from './lib/tokens'\r\nexport * from './lib/invite'","\r\nimport { Field , Int, InputType} from '@nestjs/graphql'\r\n\r\n\r\n@InputType()\r\nexport class ActivityLog {\r\n    @Field()\r\n    email: string\r\n    @Field()\r\n    activityType:string\r\n    @Field()\r\n    dateCompleted:string\r\n    @Field()\r\n    distance:number\r\n    @Field() \r\n    name: string \r\n    @Field()\r\n    speed:number\r\n    @Field()\r\n    time:number\r\n}\r\n","import { Field , Int, InputType} from '@nestjs/graphql'\r\n\r\n@InputType()\r\nexport class ActivitySchedule {\r\n    @Field()\r\n    title:string\r\n    @Field()\r\n    email: string\r\n    @Field()\r\n    time:string\r\n    @Field()\r\n    activity:string\r\n    @Field()\r\n    location:string\r\n    @Field()\r\n    distance:string\r\n    @Field()\r\n    duration:string\r\n}","\r\nimport {InputType , Field } from '@nestjs/graphql'\r\n\r\n\r\n@InputType()\r\nexport class ActivityStat {\r\n    @Field()\r\n    email: string;\r\n    @Field()\r\n    activity:string\r\n    @Field()\r\n    insight:string\r\n    @Field()\r\n    XP : string;\r\n}\r\n","export * from './user-dto'\r\nexport * from './user.entity'","\r\nimport {ObjectType , Field } from '@nestjs/graphql'\r\n\r\n\r\n@ObjectType()\r\nexport class ErrorMessage {\r\n    @Field()\r\n    message: string\r\n}\r\n","import { ResponseWorkout } from './response-workout'\r\nimport {ObjectType , Field } from '@nestjs/graphql'\r\nimport { UserEntity } from './user.entity'\r\n\r\n@ObjectType()\r\nexport class Invite {\r\n    @Field()\r\n    sender:string\r\n\r\n    @Field(type=> [String] , {nullable:true})\r\n    receivers: string[]\r\n\r\n    @Field()\r\n    workout:ResponseWorkout\r\n}\r\n","import { InputType , Field } from \"@nestjs/graphql\";\r\n\r\n\r\n@InputType()\r\nexport class LoginInput {\r\n    @Field()\r\n    username : string;\r\n    @Field()\r\n    password:string;\r\n}\r\n","import { ObjectType , Field} from \"@nestjs/graphql\";\r\nimport { UserEntity } from \"./user.entity\";\r\n\r\n@ObjectType()\r\nexport class LoginResponse {\r\n    @Field({nullable:true})\r\n    accessToken: string;\r\n    @Field(()=>UserEntity)\r\n    user: UserEntity\r\n}\r\n","import { ObjectType , Field} from \"@nestjs/graphql\";\r\n\r\n@ObjectType()\r\nexport class Metric {\r\n    @Field()\r\n    lift:number\r\n    @Field()\r\n    ride:number\r\n    @Field()\r\n    run:number\r\n    @Field()\r\n    swim:number\r\n}\r\n\r\n","import { ObjectType , Field} from \"@nestjs/graphql\";\r\n@ObjectType()\r\nexport class ResponseLogs {\r\n    @Field()\r\n    user: string\r\n    @Field()\r\n    activityType:string\r\n    @Field()\r\n    dateComplete:string\r\n    @Field()\r\n    distance:number\r\n    @Field() \r\n    name: string \r\n    @Field()\r\n    speed:number\r\n    @Field()\r\n    time:number\r\n}\r\n","import { ObjectType , Field} from \"@nestjs/graphql\";\r\nimport { UserEntity } from \"./user.entity\";\r\n\r\n\r\n@ObjectType()\r\nexport class ResponseWorkout {\r\n    @Field()\r\n    title:string\r\n    @Field()\r\n    id: string\r\n    @Field()\r\n    startTime:string\r\n    @Field()\r\n    organiser:string\r\n    @Field(type=> [UserEntity] , {nullable:true})\r\n    participants:UserEntity[]\r\n    @Field()\r\n    activityType:string\r\n    @Field()\r\n    startPoint:string\r\n    @Field()\r\n    proposedDistance:string\r\n    @Field()\r\n    proposedDuration:string\r\n    @Field(type=> [Boolean], {nullable:true})\r\n    complete:boolean[]\r\n}\r\n","\r\n\r\nimport { ObjectType , Field} from \"@nestjs/graphql\";\r\n@ObjectType()\r\nexport class Tokens {\r\n    @Field()\r\n    stravaAccess:string \r\n    @Field()\r\n    stravaRefresh:string\r\n    @Field()\r\n    exp: number\r\n    @Field()\r\n    clientId: string\r\n    @Field()\r\n    clientSecret: string\r\n    @Field()\r\n    id: string\r\n}\r\n","\r\nimport { Field , InputType} from '@nestjs/graphql'\r\n\r\n@InputType()\r\nexport class UpdateUser {\r\n    @Field({nullable:true})\r\n    userName: string\r\n    @Field({nullable:true})\r\n    userSurname: string\r\n    @Field({nullable:true})\r\n    location:string\r\n    @Field({nullable:true})\r\n    email: string\r\n    @Field()\r\n    oldemail: string\r\n    @Field({nullable:true})\r\n    cellNumber: string\r\n    @Field({nullable:true})\r\n    password: string\r\n    @Field ({nullable:true})\r\n    distance: number\r\n    @Field ({nullable:true})\r\n    longitude: number\r\n    @Field ({nullable:true})\r\n    latitude: number\r\n    @Field({nullable:true})\r\n    running: boolean\r\n    @Field({nullable:true})\r\n    riding: boolean\r\n    @Field({nullable:true})\r\n    swimming: boolean\r\n    @Field({nullable:true})\r\n    weightLifting: boolean\r\n    @Field({nullable:true})\r\n    bio: string\r\n    @Field({nullable:true})\r\n    gender: string\r\n\r\n    \r\n}\r\n","import { Field , Int, InputType} from '@nestjs/graphql'\r\n@InputType()\r\nexport class UserDto {\r\n    @Field()\r\n    userName: string\r\n    @Field()\r\n    userSurname: string\r\n    @Field()\r\n    location:string\r\n    @Field({nullable:true})\r\n    longitude:number\r\n    @Field({nullable:true})\r\n    latitude:number\r\n    @Field({nullable:true})\r\n    stravaToken:string\r\n    @Field()\r\n    gender:string\r\n    @Field()\r\n    dob:string\r\n    @Field()\r\n    email: string\r\n    @Field()\r\n    cellNumber: string\r\n    @Field()\r\n    password: string\r\n}\r\n","\r\n\r\nimport {ObjectType , Field } from '@nestjs/graphql'\r\n\r\n\r\n@ObjectType()\r\nexport class UserStatRes {\r\n    @Field()\r\n    email: string;\r\n    @Field()\r\n    activity:string\r\n    @Field()\r\n    insight:string\r\n    @Field()\r\n    XP : string;\r\n}\r\n","import {ObjectType , Field } from '@nestjs/graphql'\r\nimport { Metric } from \"./metric\";\r\n\r\n@ObjectType()\r\nexport class UserEntity {\r\n    @Field({nullable:true})\r\n    userName: string\r\n    @Field({nullable:true})\r\n    userSurname: string\r\n    @Field({nullable:true})\r\n    location:string\r\n    @Field({nullable:true})\r\n    longitude:number\r\n    @Field({nullable:true})\r\n    latitude:number\r\n    @Field({nullable:true})\r\n    stravaToken:string\r\n    @Field({nullable:true})\r\n    dob:string\r\n    @Field({nullable:true})\r\n    gender:string\r\n    @Field({nullable:true})\r\n    email: string\r\n    @Field({nullable:true})\r\n    cellNumber: string \r\n    @Field({nullable:true})\r\n    id:string\r\n    @Field({nullable:true})\r\n    bio: string \r\n    @Field(()=>Metric, {nullable:true})\r\n    metrics: Metric\r\n    @Field(type=> [String] , {nullable:true})\r\n    buddies: string[] \r\n    @Field(type=> [Number] , {nullable:true})\r\n    ratings: number[]\r\n    @Field({nullable:true})\r\n    distance: number\r\n}\r\n","\r\n\r\nimport { Field , InputType} from '@nestjs/graphql'\r\n@InputType()\r\nexport class Userconfig {\r\n    @Field()\r\n    email:string\r\n    @Field()\r\n    running: number\r\n    @Field()\r\n    riding: number\r\n    @Field()\r\n    swimming: number\r\n    @Field()\r\n    weightLifting: number\r\n    @Field()\r\n    distance:number\r\n    @Field()\r\n    bio: string\r\n\r\n}\r\n","export * from './lib/api-internal-api-api-training-buddy-api.module';\r\n","import { Module } from '@nestjs/common';\r\nimport { TrainingBuddyApiResolver } from './training-buddy-api.resolver';\r\nimport { ApiInternalApiRepositoryDataAccessService } from '@training-buddy/api/internal-api/repository/data-access';\r\nimport {UserEntity } from '@training-buddy/api/internal-api/api/shared/interfaces/data-access';\r\n\r\nimport { TrainingBuddyServiceService, LoginGuard,ApiInternalApiServiceTrainingBuddyServiceModule  } from '@training-buddy/api/internal-api/service/training-buddy-service'\r\n@Module({\r\n  controllers: [],\r\n  imports: [ApiInternalApiServiceTrainingBuddyServiceModule,],\r\n  providers: [TrainingBuddyApiResolver,TrainingBuddyServiceService, LoginGuard, ApiInternalApiRepositoryDataAccessService , UserEntity ],\r\n  exports: [],\r\n})\r\nexport class ApiInternalApiApiTrainingBuddyApiModule {}\r\n","import { Mutation, Resolver,Subscription, Args, Query, Context } from '@nestjs/graphql';\r\nimport { TrainingBuddyServiceService , LoginGuard, JwtAuthGuard } from '@training-buddy/api/internal-api/service/training-buddy-service'\r\nimport {UserDto ,Invite , UserEntity,ResponseWorkout,ResponseLogs , LoginResponse, Tokens , LoginInput,ActivityLog, ActivitySchedule, ErrorMessage, ActivityStat, UpdateUser, UserStatRes, Userconfig} from '@training-buddy/api/internal-api/api/shared/interfaces/data-access';\r\nimport { UseGuards } from '@nestjs/common';\r\nimport { PubSub } from 'graphql-subscriptions'\r\nconst pubsub = new PubSub();\r\n@Resolver()\r\nexport class TrainingBuddyApiResolver {\r\n    \r\n    /**\r\n     * \r\n     * @param trainingBuddyService \r\n     */\r\n    constructor (private readonly trainingBuddyService : TrainingBuddyServiceService ){\r\n    }\r\n    /**\r\n     * \r\n     * @param userDTO \r\n     * @returns UserEntity\r\n     * tested\r\n     */\r\n    @Mutation(()=>ErrorMessage)\r\n    signup(@Args('userDto')userDTO : UserDto){\r\n        return this.trainingBuddyService.signup(userDTO);\r\n    }\r\n    /**\r\n     * \r\n     * @param loginInput \r\n     * @param context \r\n     * @returns LoginResponse\r\n     * tested\r\n     */\r\n    @Mutation(()=>LoginResponse)\r\n    @UseGuards(LoginGuard)\r\n    login(@Args('loginInput')loginInput:LoginInput, @Context() context){\r\n        return this.trainingBuddyService.login(context.user);\r\n    }\r\n    /**\r\n     * \r\n     * @param Location \r\n     * @returns Array of UserEntity\r\n     * tested\r\n     */\r\n    @Query(() => [UserEntity])\r\n    //@UseGuards(JwtAuthGuard)\r\n    findAll(@Args('email')email:string){\r\n        return this.trainingBuddyService.getAll(email);\r\n    }\r\n   \r\n    @Query(()=>UserEntity)\r\n    getOne(@Args(\"email\")email:string){\r\n       \r\n        return this.trainingBuddyService.findOne(email);\r\n    }\r\n    /**\r\n     * \r\n     * @param update \r\n     * @returns ErrorMessage\r\n     */\r\n    @Mutation(()=>ErrorMessage)\r\n    //@UseGuards(JwtAuthGuard)\r\n    updateProfile(@Args('updates')update: UpdateUser){\r\n        return this.trainingBuddyService.updateUser(update)\r\n    }\r\n    /**\r\n     * \r\n     * @param userconfig\r\n     * @returns ErrorMessage\r\n     * tested\r\n     *  */ \r\n    @Mutation(()=>ErrorMessage)\r\n    userConfig(@Args('userConfig')userconfig: Userconfig){\r\n        return this.trainingBuddyService.userConfig(userconfig)\r\n    }\r\n    /**\r\n     * \r\n     * @param activityLog \r\n     * @returns ErrorMessage\r\n     * tested  \r\n     */\r\n    @Mutation(()=> ErrorMessage)\r\n    activityLog(@Args('Activitylog')activityLog: ActivityLog){\r\n        return this.trainingBuddyService.activityLog(activityLog)\r\n    }\r\n    /**\r\n     * \r\n     * @param activitySchedule \r\n     * @returns ErrorMessage\r\n     * tested\r\n     */\r\n    @Mutation(()=> ErrorMessage)\r\n    activitySchedule(@Args('ActivitySchedule')activitySchedule: ActivitySchedule){\r\n    const val = this.trainingBuddyService.activitySchedule(activitySchedule)\r\n    const data3 =this.trainingBuddyService.getScheduleWorkout(activitySchedule.email);\r\n    pubsub.publish(\"getAllWorkouts\", {getAllWorkouts: data3})\r\n    return val; \r\n    }\r\n    @Subscription(()=>[ResponseWorkout])\r\n    getAllWorkouts(){\r\n        const val = pubsub.asyncIterator(\"getAllWorkouts\")\r\n        return val;\r\n    }\r\n   \r\n    @Mutation(()=>ErrorMessage)\r\n    sendRequest(@Args('Sender')userEmail: string , @Args('Receiver')otherEmail: string){\r\n        const val = this.trainingBuddyService.sendRequest(userEmail, otherEmail);\r\n        this.subscriptionsRequest(userEmail, otherEmail)\r\n        return val\r\n    }\r\n    /**\r\n     * \r\n     * @returns [userEntity]\r\n     */\r\n    @Subscription(()=>[UserEntity])\r\n    getIncomingSub(){\r\n        const val = pubsub.asyncIterator( \"getIncomingSub\")\r\n        return val;\r\n    }\r\n    /**\r\n     * \r\n     * @returns [userEntity]\r\n     */\r\n    @Subscription(()=>[UserEntity])\r\n    getOutgoingSub(){\r\n        const val = pubsub.asyncIterator(\"getOutgoingSub\")\r\n        return val;\r\n    }\r\n    /**\r\n     * \r\n     * @returns [UserEntity]\r\n     */\r\n    @Subscription(()=>[UserEntity])\r\n\r\n    getConnectionsSub(){\r\n        const val = pubsub.asyncIterator(\"getConnectionsSub\")\r\n        return val;\r\n    }\r\n    /**\r\n     * \r\n     * @param userEmail \r\n     * @param otherEmail \r\n     * @returns ErrorMessage\r\n     * tested\r\n     */\r\n    @Mutation(()=>ErrorMessage)\r\n    reject(@Args('Sender')userEmail: string ,  @Args('Receiver')otherEmail: string){\r\n        const val = this.trainingBuddyService.reject(userEmail, otherEmail);\r\n        this.subscriptionsRequest(userEmail, otherEmail)\r\n        return val;\r\n    }\r\n    /**\r\n     * \r\n     * @param userEmail \r\n     * @param otherEmail \r\n     * @returns ErrorMessage\r\n     * tested\r\n     */\r\n    @Mutation(()=>ErrorMessage)\r\n    accept(@Args('Sender')otherEmail: string ,  @Args('Receiver')userEmail: string){\r\n        const val = this.trainingBuddyService.accept(otherEmail, userEmail);\r\n        this.subscriptionsRequest(userEmail, otherEmail)\r\n        return val;\r\n    }\r\n    /**\r\n     * \r\n     * @param userEmail \r\n     * @returns \r\n     * tested\r\n     */\r\n    @Query(()=>[UserEntity])\r\n    getIncoming(@Args(\"email\")userEmail:string){\r\n        return  this.trainingBuddyService.getIncoming(userEmail);\r\n    }\r\n   \r\n    /**\r\n     * \r\n     * @param userEmail \r\n     * @returns [userEntities]\r\n     * tested\r\n     */\r\n    @Query(()=>[UserEntity])\r\n    getOutgoing(@Args(\"email\")userEmail:string){\r\n        return this.trainingBuddyService.getOutgoing(userEmail);\r\n    }\r\n    /**\r\n     * \r\n     * @param userEmail \r\n     * @returns  [userEntities]\r\n     * tested\r\n     */\r\n    @Query(()=>[UserEntity])\r\n    getConnections(@Args(\"email\")userEmail:string){\r\n        return this.trainingBuddyService.getConnections(userEmail);\r\n    }\r\n    /**\r\n     * \r\n     * @param userEmail \r\n     * @returns\r\n     * tested \r\n     */\r\n    @Query(()=>[ResponseWorkout])\r\n    getScheduleWorkout(@Args(\"email\")userEmail:string){\r\n        return this.trainingBuddyService.getScheduleWorkout(userEmail);\r\n    }\r\n    /**\r\n     * \r\n     * @param workoutID \r\n     * @returns \r\n     */\r\n    @Mutation(()=>ErrorMessage)\r\n    completeWorkout(@Args(\"workoutID\")workoutID:string){\r\n        return this.trainingBuddyService.completeWorkout(workoutID);\r\n    }\r\n    /**\r\n     * \r\n     * @param userEmail \r\n     * @returns \r\n     */\r\n    @Query(()=>[ResponseWorkout])\r\n    getWorkoutHistory(@Args(\"email\")userEmail:string){\r\n        return this.trainingBuddyService.getWorkoutHistory(userEmail);\r\n    }\r\n    @Mutation(()=>ErrorMessage)\r\n    addRating(@Args(\"email\")userEmail:string, @Args(\"rating\")rating:number){\r\n        return this.trainingBuddyService.addRating(userEmail, rating);\r\n    }\r\n    /**\r\n     * \r\n     * @param userEmail \r\n     * @returns \r\n     * tested\r\n     */\r\n    @Query(()=>[ResponseLogs])\r\n    getLogs(@Args(\"email\")userEmail:string){\r\n        return this.trainingBuddyService.getLogs(userEmail);\r\n    }\r\n    /**\r\n     * \r\n     * @param userEmail \r\n     * @param accessToken \r\n     * @param refreshToken \r\n     * @returns \r\n     */\r\n\r\n    @Mutation(()=>ErrorMessage)\r\n    saveTokens(@Args(\"email\")userEmail :string ,@Args(\"access\")accessToken : string , @Args(\"refresh\")refreshToken: string, @Args(\"exp\")exp:number,  @Args(\"clientId\")clientId:string,  @Args(\"clientSecret\")clientSecret:string, @Args(\"id\")id:string ){\r\n        return this.trainingBuddyService.saveTokens(userEmail , accessToken , refreshToken, exp, clientId, clientSecret, id);\r\n    }\r\n    /**\r\n     * \r\n     * @param userEmail \r\n     * @returns \r\n     */\r\n    @Query(()=>Tokens)\r\n    getTokens(@Args(\"email\")userEmail:string){\r\n        return this.trainingBuddyService.getToken(userEmail);\r\n    }\r\n    /**\r\n     * \r\n     * @param userEmail \r\n     * @param receiver \r\n     * @param startTime \r\n     * @returns ErrorMessage\r\n     */\r\n    @Mutation(()=>ErrorMessage)\r\n    sendInvite(@Args(\"email\")userEmail:string ,@Args(\"receiver\")receiver:string ,@Args(\"workoutID\")workoutID:string){\r\n        const val = this.trainingBuddyService.sendInvite(userEmail,receiver, workoutID);\r\n        this.subscriptionInvites(userEmail,receiver, workoutID)\r\n        return val;\r\n    }\r\n   /**\r\n    * @return UserEntity\r\n    */\r\n    @Query(()=>UserEntity)\r\n    getUser(@Args(\"UserID\")userID:string){\r\n        return this.trainingBuddyService.getUser(userID);\r\n    }\r\n    /**\r\n     * \r\n     * @param userEmail \r\n     * @param startTime \r\n     * @returns ErrorMessage\r\n     */\r\n    @Mutation(()=>ErrorMessage)\r\n    createInvite(@Args(\"email\")userEmail:string ,@Args(\"workoutID\")workoutID:string){\r\n        return this.trainingBuddyService.createInvite(userEmail, workoutID);\r\n    }\r\n    /**\r\n     * \r\n     * @param userEmail \r\n     * @param sender \r\n     * @param startTime \r\n     * @returns ErrorMessage\r\n     */\r\n    @Mutation(()=>ErrorMessage)\r\n    acceptInvite(@Args(\"email\")userEmail:string ,@Args(\"sender\")sender:string, @Args(\"workoutID\")workoutID:string){\r\n        const val = this.trainingBuddyService.acceptInvite(userEmail,sender, workoutID);\r\n        this.subscriptionInvites(userEmail,sender, workoutID)\r\n        return val;\r\n    }\r\n    /**\r\n     * \r\n     * @param userEmail \r\n     * @param sender \r\n     * @param startTime \r\n     * @returns ErrorMessage\r\n     */\r\n    @Mutation(()=>ErrorMessage)\r\n    rejectInvite(@Args(\"email\")userEmail:string ,@Args(\"sender\")sender:string, @Args(\"workoutID\")workoutID:string){\r\n        const val = this.trainingBuddyService.rejectInvite(userEmail,sender, workoutID);\r\n        this.subscriptionInvites(userEmail,sender, workoutID)\r\n        return val;\r\n    }\r\n    /**\r\n     * \r\n     * @param userEmail \r\n     * @returns [Invite]\r\n     */\r\n    @Query(()=> [Invite])\r\n    getIncomingInvites(@Args(\"email\")userEmail:string){\r\n        return this.trainingBuddyService.getIncomingInvites(userEmail)\r\n    }\r\n    /**\r\n     * \r\n     * @param userEmail \r\n     * @returns [Invite]\r\n     */\r\n    @Query(()=> [Invite])\r\n    getOutgoingInvites(@Args(\"email\")userEmail:string){\r\n        return this.trainingBuddyService.getOutgoingInvites(userEmail)\r\n    }\r\n    /**\r\n     * \r\n     * @param userEmail \r\n     * @param startTime \r\n     * @returns ResponseWorkout\r\n     */\r\n    @Query(()=>ResponseWorkout)\r\n    getWorkout(@Args(\"email\")userEmail:string ,@Args(\"workoutID\")workoutID:string){\r\n        return this.trainingBuddyService.getWorkout(userEmail, workoutID);\r\n    }\r\n     /**\r\n     * \r\n     * @param userEmail \r\n     * @param otherEmail \r\n     * @returns ErrorMessage\r\n     * tested \r\n     */\r\n    subscriptionsRequest(userEmail: string, otherEmail: string){\r\n        const data1 =this.trainingBuddyService.getIncoming(otherEmail);\r\n        const data2 =this.trainingBuddyService.getOutgoing(userEmail);\r\n        const data3 =this.trainingBuddyService.getConnections(userEmail);\r\n        const data4 =this.trainingBuddyService.getConnections(otherEmail);\r\n      \r\n        pubsub.publish( \"getIncomingSub\",{[ \"getIncomingSub\"]:data1})\r\n        pubsub.publish( \"getOutgoingSub\",{[ \"getOutgoingSub\"]:data2})\r\n        pubsub.publish( \"getConnectionsSub\",{[ \"getConnectionsSub\"]:data3})\r\n        pubsub.publish( \"getConnectionsSub\",{[ \"getConnectionsSub\"]:data4})\r\n    }\r\n    /**\r\n     * \r\n     * @param userEmail \r\n     * @param otherEmail \r\n     * @param startTime \r\n     */\r\n    subscriptionInvites(userEmail:string , otherEmail:string, startTime: string){\r\n        const data1 =this.trainingBuddyService.getIncomingInvites(otherEmail);\r\n        const data2 =this.trainingBuddyService.getOutgoingInvites(userEmail);\r\n        const data3 =this.trainingBuddyService.getWorkout(userEmail, startTime);\r\n\r\n        pubsub.publish( \"getIncomingInviteSub\",{[ \"getIncomingInviteSub\"]:data1})\r\n        pubsub.publish( \"getOutgoingInviteSub\",{[ \"getOutgoingInviteSub\"]:data2})\r\n        pubsub.publish( \"getWorkoutSub\",{[ \"getWorkoutSub\"]:data3})\r\n       \r\n\r\n\r\n    }\r\n    @Subscription(()=>[Invite])\r\n    getIncomingInviteSub(){\r\n        const val = pubsub.asyncIterator(\"getIncomingInviteSub\")\r\n        return val;\r\n    }\r\n\r\n\r\n    @Subscription(()=>[Invite])\r\n    getOutgoingInviteSub(){\r\n        const val = pubsub.asyncIterator(\"getOutgoingInviteSub\")\r\n        return val;\r\n    }\r\n    @Subscription(()=>[ResponseWorkout])\r\n    getWorkoutSub(){\r\n        const val = pubsub.asyncIterator(\"getWorkoutSub\")\r\n        return val;\r\n    }\r\n\r\n\r\n\r\n\r\n    \r\n\r\n}\r\n\r\n\r\n","export * from './lib/api-internal-api-repository-data-access.service';\r\nexport * from './lib/api-internal-api-repository-data-access.module';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { ApiInternalApiRepositoryDataAccessService } from './lib/api-internal-api-repository-data-access.service';\r\n\r\nconst repo = new ApiInternalApiRepositoryDataAccessService() ;\r\n\r\nexport const scheduledWorkoutsWatch = new Observable((subscriber) => {\r\n    repo.scheduledWorkoutCollection.onSnapshot((querySnapshot) => {\r\n        querySnapshot.forEach((doc) =>{\r\n            subscriber.next(doc.data()) ;\r\n        })\r\n    });\r\n})\r\n\r\nexport const activityLogsWatch = new Observable((subscriber) => {\r\n    repo.activityLogsCollection.onSnapshot((querySnapshot) => {\r\n        querySnapshot.forEach((doc) =>{\r\n            subscriber.next(doc.data()) ;\r\n        })\r\n    });\r\n})\r\n\r\nexport const workoutInvitesWatch = new Observable((subscriber) => {\r\n    repo.workoutInvitesCollection.onSnapshot((querySnapshot) => {\r\n        querySnapshot.forEach((doc) =>{\r\n            subscriber.next(doc.data()) ;\r\n        })\r\n    });\r\n})\r\n\r\nexport const buddyRequestsWatch = new Observable((subscriber) => {\r\n    repo.buddyRequestsCollection.onSnapshot((querySnapshot) => {\r\n        querySnapshot.forEach((doc) =>{\r\n            subscriber.next(doc.data()) ;\r\n        })\r\n    });\r\n})\r\n\r\nexport const buddyConnectionsWatch = new Observable((subscriber) => {\r\n    repo.buddyConnectionsCollection.onSnapshot((querySnapshot) => {\r\n        querySnapshot.forEach((doc) =>{\r\n            subscriber.next(doc.data()) ;\r\n        })\r\n    });\r\n})\r\n\r\nexport const usersWatch = new Observable((subscriber) => {\r\n    repo.usersCollection.onSnapshot((querySnapshot) => {\r\n        querySnapshot.forEach((doc) =>{\r\n            subscriber.next(doc.data()) ;\r\n        })\r\n    });\r\n})         \r\n","import { Module } from '@nestjs/common';\r\nimport { ApiInternalApiRepositoryDataAccessService } from './api-internal-api-repository-data-access.service';\r\nimport * as admin from 'firebase-admin';\r\n\r\n@Module({\r\n  controllers: [],\r\n  providers: [ApiInternalApiRepositoryDataAccessService],\r\n  exports: [ApiInternalApiRepositoryDataAccessService],\r\n})\r\nexport class ApiInternalApiRepositoryDataAccessModule {}\r\n","import { HttpStatus, Injectable, Param } from '@nestjs/common';\r\nimport { Field } from '@nestjs/graphql';\r\nimport { UserDto, ActivityStat, Userconfig, ActivityLog, ActivitySchedule } from '@training-buddy/api/internal-api/api/shared/interfaces/data-access';\r\nimport * as admin from 'firebase-admin'\r\nimport { firestore } from 'firebase-admin';\r\nimport passport = require('passport');\r\nimport { emit, send } from 'process';\r\nimport { async, observable } from 'rxjs';\r\nimport internal = require('stream');\r\nimport uuid = require('uuid') ;\r\nimport { Observable } from 'rxjs';\r\nimport fs = require('fs') ;\r\nimport {getFirestore, writeBatch} from 'firebase/firestore' ;\r\nimport axios from 'axios';\r\nimport { collection, query, where, onSnapshot } from \"firebase/firestore\";\r\nimport { subscribe } from 'graphql';\r\n\r\n\r\n@Injectable()\r\nexport class ApiInternalApiRepositoryDataAccessService {\r\n    \r\n    \r\n    //readonly arrayUnion = FirebaseFirestore.FieldValue.arrayUnion ;\r\n    firestore = new admin.firestore.Firestore() ;\r\n    readonly arrayUnion = firestore.FieldValue.arrayUnion ;\r\n    readonly arrayRemove = firestore.FieldValue.arrayRemove ;\r\n    usersCollection = this.firestore.collection('/Users') ;\r\n    activityLogsCollection = this.firestore.collection('/ActivityLogs') ;\r\n    buddyConnectionsCollection = this.firestore.collection('/BuddyConnections') ;\r\n    buddyRequestsCollection = this.firestore.collection('/BuddyRequests') ;\r\n    scheduledWorkoutCollection = this.firestore.collection('/ScheduledWorkouts') ;\r\n    workoutInvitesCollection = this.firestore.collection('/WorkoutInvites') ;\r\n\r\n    async getActivityScheduleCollection() {\r\n        return this.scheduledWorkoutCollection ;\r\n    }\r\n    //USERS\r\n    //users - CREATE\r\n    async createUser(@Param() user: UserDto) {\r\n        const data = {\r\n            id: uuid.v1().toString(),\r\n            userName : user.userName,\r\n            userSurname : user.userSurname,\r\n            email : user.email,\r\n            cellNumber : user.cellNumber,\r\n            dob : user.dob,\r\n            gender : user.gender,\r\n            longitude : user.longitude,\r\n            latitude : user.latitude,\r\n            location : user.location,\r\n            password : user.password,\r\n            buddies: [],\r\n            signUpStage : 0,\r\n            ratings: []       \r\n        }\r\n\r\n        await this.usersCollection.doc().set(data)\r\n        .then(results =>{\r\n            return data ;\r\n        });\r\n        return data ;\r\n    }\r\n\r\n    //users - READ\r\n\r\n    async login(@Param() email: string):Promise<any>{\r\n        return this.usersCollection.where('email', '==', email).get().then(async (result) =>{\r\n            if(result.docs[0]) return result.docs[0].data() ;\r\n            return false ;\r\n        });\r\n    }\r\n\r\n    async getUser(@Param() userID:string):Promise<any>{\r\n        return this.usersCollection.where('id', '==', userID).get().then(async (result) =>{\r\n            if(result.docs[0]) return result.docs[0].data() ;\r\n            return false ;\r\n        });\r\n    }\r\n\r\n    async getMetrics(@Param() email: string){\r\n        const data = [] ;\r\n\r\n        await this.usersCollection.where('email', '!=', email).get().then(async (querySnapshot) =>{\r\n            querySnapshot.docs.forEach((doc) => {\r\n                const metric = [] ;\r\n                metric.push(doc.data().email);\r\n                metric.push(doc.data().metrics) ;\r\n                data.push(metric) ;\r\n            });\r\n        });\r\n\r\n        return data ;\r\n    }\r\n\r\n    async findAll(@Param() email: string){\r\n        const users = [] ;\r\n        await this.usersCollection.get().then(async (querySnapshot) =>{\r\n            querySnapshot.docs.forEach((doc) => {\r\n                if(doc.data().signUpStage > 0)\r\n                    users.push(doc.data());\r\n            });\r\n        });\r\n        return users ;\r\n    }\r\n\r\n    //user - SAVE STRAVA TOKENS\r\n\r\n    async findByStravaId(@Param() id: string){\r\n        return this.usersCollection.where('strava.ownerId', '==', id).get().then(async (result) =>{\r\n            if(result.docs[0]) return result.docs[0].data() ;\r\n            return false ;\r\n        });\r\n    }\r\n\r\n    async saveTokens(@Param() email: string, @Param() access: string, @Param() refresh: string, @Param() exp: number, @Param() clientId: any, @Param() clientSecret: any, @Param() id:any){\r\n        const data = {\r\n\r\n            strava: {\r\n            stravaAccess: access,\r\n            stravaRefresh: refresh,\r\n            exp: exp,\r\n            clientId: clientId,\r\n            clientSecret: clientSecret,\r\n            ownerId: id\r\n            },\r\n            signUpStage: 3\r\n        }\r\n\r\n        const toLog = [] ;\r\n            //fetch strava activities\r\n            await this.getActivities(access).then((activities : any) => {\r\n                //console.log(activities.data) ;\r\n\r\n                activities.data.forEach(activity => {\r\n\r\n                    let valid = false ;\r\n                    let type = \"\" ;\r\n                    if(activity.type == \"Run\"){\r\n                        valid = true ;\r\n                        type = \"run\" ;\r\n                    }else if(activity.type == \"Ride\"){\r\n                        valid = true ;\r\n                        type = \"ride\" ;\r\n                    }else if(activity.type == \"Swim\"){\r\n                        valid = true ;\r\n                        type = \"swim\" ;\r\n                    }else if(activity.type == \"Workout\"){\r\n                        valid = true ;\r\n                        type = \"lift\" ;\r\n                    }\r\n\r\n                    //const exists = this.activityExists(activity.id) ;\r\n                    // if(this.activityExists(activity.id)){\r\n                    //     console.log(\"exists\") ;\r\n                    //     valid = false ;\r\n                    // }\r\n\r\n                    if(valid){\r\n                        const date = new Date(activity.start_date) ;\r\n                        //console.log(activity) ;\r\n                        const log = {\r\n                            id: activity.id,\r\n                            user: email,\r\n                            activityType: type,\r\n                            dateComplete: date,\r\n                            distance: activity.distance,\r\n                            name: activity.name,\r\n                            speed: activity.average_speed,\r\n                            time: activity.moving_time\r\n                        }\r\n                        //console.log(log) ;\r\n                        toLog.push(log) ;\r\n                    }\r\n                });\r\n            }) ;\r\n\r\n            await this.logManyActivities(toLog) ;\r\n\r\n        return this.usersCollection.where('email', '==', email).get().then(async (result) => {\r\n            if(result.docs[0]) return this.usersCollection.doc(result.docs[0].id).set(data, {merge: true}).then(results => {\r\n                return true ;\r\n            }) ;\r\n            return false ; \r\n        })\r\n    }\r\n\r\n    async getTokens(@Param() email: string){\r\n        const data = [] ;\r\n\r\n        return this.usersCollection.where('email', '==', email).get().then(async (result) => {\r\n                data.push(result.docs[0].data().stravaAccess) ;\r\n                data.push(result.docs[0].data().stravaRefresh) ;\r\n                return data ;\r\n        })\r\n    }\r\n\r\n    //user - UPDATE\r\n\r\n    async userConfig(@Param() userConfig: Userconfig){\r\n        \r\n        let run = 0 ;\r\n        let runGroup = -1;\r\n        let ride = 0; \r\n        let rideGroup = -1 ;\r\n        let swim = 0; \r\n        let swimGroup = -1 ;\r\n        let lift = 0 ;\r\n        let liftGroup = -1 ;\r\n\r\n        if(userConfig.riding){\r\n            ride = userConfig.riding;\r\n            rideGroup = 0 ;\r\n        }\r\n        if(userConfig.running){\r\n            run = userConfig.running;\r\n            runGroup = 0 ;\r\n        }\r\n        if(userConfig.swimming){\r\n            swim =userConfig.swimming;\r\n            swimGroup = 0 ;\r\n        }\r\n        if(userConfig.weightLifting){\r\n            lift =userConfig.weightLifting;\r\n            liftGroup = 0 ;\r\n        }\r\n        \r\n        const data = {\r\n            metrics: {\r\n                run : run,\r\n                ride : ride, \r\n                swim : swim,\r\n                lift : lift\r\n            },\r\n            groups: {\r\n                runGroup: runGroup,\r\n                rideGroup: rideGroup,\r\n                swimGroup: swimGroup,\r\n                liftGroup: liftGroup\r\n            },\r\n            distance : userConfig.distance,\r\n            bio : userConfig.bio,\r\n            signUpStage: 1\r\n        }\r\n\r\n        return this.usersCollection.where('email', '==', userConfig.email).get().then(async (result) => {\r\n            if(result.docs[0]) return this.usersCollection.doc(result.docs[0].id).set(data, {merge: true}).then(results => {\r\n                return true ;\r\n            }) ;\r\n            return false ; \r\n        })\r\n    }\r\n\r\n    async addRating(@Param() email: string, @Param() rating: number){\r\n        return this.usersCollection.where('email', '==', email).get().then(async (result) => {\r\n            if(result.docs[0]) return this.usersCollection.doc(result.docs[0].id).update({rating: this.arrayUnion(rating)}).then(results => {\r\n                return true ;\r\n            }) ;\r\n            return false ;\r\n        })  \r\n    }\r\n\r\n    async updateCellNumber(@Param() cellNumber: string, @Param() email: string){\r\n        return this.usersCollection.where('email', '==', email).get().then(async (result) => {\r\n            if(result.docs[0]) return this.usersCollection.doc(result.docs[0].id).update({cellNumber: cellNumber}).then(results => {\r\n                return true ;\r\n            }) ;\r\n            return false ;\r\n        })      \r\n    }\r\n\r\n    async updateDistance(@Param() distance: number, @Param() email: string){\r\n        return this.usersCollection.where('email', '==', email).get().then(async (result) => {\r\n            if(result.docs[0]) return this.usersCollection.doc(result.docs[0].id).update({distance: distance}).then(results => {\r\n                return true ;\r\n            }) ;\r\n            return false ;\r\n        })      \r\n    }\r\n\r\n    async updateEmail(@Param() email: string, @Param() oldEmail: string){\r\n        return this.usersCollection.where('email', '==', oldEmail).get().then(async (result) => {\r\n            if(result.docs[0]) return this.usersCollection.doc(result.docs[0].id).update({email: email}).then(results => {\r\n                return true ;\r\n            }) ;\r\n            return false ;\r\n        })\r\n    }\r\n\r\n    async updateLocation(@Param() location: string, @Param() email: string){\r\n        return this.usersCollection.where('email', '==', email).get().then(async (result) => {\r\n            if(result.docs[0]) return this.usersCollection.doc(result.docs[0].id).update({location: location}).then(results => {\r\n                return true ;\r\n            }) ;\r\n            return false ;\r\n        })\r\n    }\r\n\r\n    async updatePassword(@Param() password: string, @Param() email: string){\r\n        return this.usersCollection.where('email', '==', email).get().then(async (result) => {\r\n            if(result.docs[0]) return this.usersCollection.doc(result.docs[0].id).update({password: password}).then(results => {\r\n                return true ;\r\n            }) ;\r\n            return false ;\r\n        })\r\n    }\r\n\r\n    async updateUserName(@Param() userName: string, @Param() email: string){\r\n        return this.usersCollection.where('email', '==', email).get().then(async (result) => {\r\n            if(result.docs[0]) return this.usersCollection.doc(result.docs[0].id).update({userName: userName}).then(results => {\r\n                return true ;\r\n            }) ;\r\n            return false ;\r\n        })\r\n    }\r\n\r\n    async updateUserSurname(@Param() userSurname: string, @Param() email: string){\r\n        return this.usersCollection.where('email', '==', email).get().then(async (result) => {\r\n            if(result.docs[0]) return this.usersCollection.doc(result.docs[0].id).update({userSurname: userSurname}).then(results => {\r\n                return true ;\r\n            }) ;\r\n            return false ;\r\n        })\r\n    }\r\n\r\n    async updateLongitude(@Param() long: number, @Param() email: string){\r\n        return this.usersCollection.where('email', '==', email).get().then(async (result) => {\r\n            if(result.docs[0]) return this.usersCollection.doc(result.docs[0].id).update({longitude: long}).then(results => {\r\n                return true ;\r\n            }) ;\r\n            return false ;\r\n        })\r\n    }\r\n\r\n    async updateLatitude(@Param() latitude: number, @Param() email: string){\r\n        return this.usersCollection.where('email', '==', email).get().then(async (result) => {\r\n            if(result.docs[0]) return this.usersCollection.doc(result.docs[0].id).update({latitude: latitude}).then(results => {\r\n                return true ;\r\n            }) ;\r\n            return false ;\r\n        })\r\n    }\r\n\r\n    async updateRunning(@Param() run: boolean, @Param() email: string){\r\n        let r = 0 ;\r\n        if(run) \r\n            r = 1 ;\r\n        return this.usersCollection.where('email', '==', email).get().then(async (result) => {\r\n            if(result.docs[0]) return this.usersCollection.doc(result.docs[0].id).update({\"metrics.run\": r}).then(results => {\r\n                return true ;\r\n            }) ;\r\n            return false ;\r\n        })\r\n    }\r\n\r\n    async updateRiding(@Param() ride: boolean, @Param() email: string){\r\n        let r = 0 ;\r\n        if(ride) \r\n            r = 1 ;\r\n        return this.usersCollection.where('email', '==', email).get().then(async (result) => {\r\n            if(result.docs[0]) return this.usersCollection.doc(result.docs[0].id).update({\"metrics.ride\": r}).then(results => {\r\n                return true ;\r\n            }) ;\r\n            return false ;\r\n        })\r\n    }\r\n\r\n    async updateSwimming(@Param() swim: boolean, @Param() email: string){\r\n        let r = 0 ;\r\n        if(swim) \r\n            r = 1 ;\r\n        return this.usersCollection.where('email', '==', email).get().then(async (result) => {\r\n            if(result.docs[0]) return this.usersCollection.doc(result.docs[0].id).update({\"metrics.swim\": r}).then(results => {\r\n                return true ;\r\n            }) ;\r\n            return false ;\r\n        })\r\n    }\r\n\r\n    async updateLifting(@Param() lift: boolean, @Param() email: string){\r\n        let r = 0 ;\r\n        if(lift) \r\n            r = 1 ;\r\n        return this.usersCollection.where('email', '==', email).get().then(async (result) => {\r\n            if(result.docs[0]) return this.usersCollection.doc(result.docs[0].id).update({\"metrics.lift\": r}).then(results => {\r\n                return true ;\r\n            }) ;\r\n            return false ;\r\n        })\r\n    }\r\n\r\n    async updateBio(@Param() bio: string, @Param() email: string){\r\n        return this.usersCollection.where('email', '==', email).get().then(async (result) => {\r\n            if(result.docs[0]) return this.usersCollection.doc(result.docs[0].id).update({bio: bio}).then(results => {\r\n                return true ;\r\n            }) ;\r\n            return false ;\r\n        })\r\n    }\r\n\r\n    async updateAccessToken(@Param() token: string, @Param() email: string){\r\n        return this.usersCollection.where('email', '==', email).get().then(async (result) => {\r\n            if(result.docs[0]) return this.usersCollection.doc(result.docs[0].id).update({\"strava.stravaAccess\": token}).then(results => {\r\n                return true ;\r\n            }) ;\r\n            return false ;\r\n        })\r\n    }\r\n\r\n    //user - DELETE\r\n    \r\n    //TODO: implement\r\n\r\n\r\n    //ACTIVITY LOGS\r\n\r\n    //activity logs - CREATE\r\n    async logStrava(@Param() activityId: any, @Param() ownerId: any){\r\n\r\n        console.log(\"repo reached\") ;\r\n        const user = await this.findByStravaId(ownerId) ;\r\n\r\n        if(user){\r\n            //check if token is expired\r\n            console.log(\"exists\");\r\n            if((user.strava.exp < Date.now()/1000)){\r\n                //get new token\r\n                await this.getNewToken(user.strava.stravaRefresh, user.strava.clientId, user.strava.clientSecret).then((access : any) => {\r\n                    console.log(access.data.access_token) ;\r\n                    this.updateAccessToken(access.data.access_token, user.email).then((newAccess) => {\r\n                        axios.get('https://www.strava.com/api/v3/activities/' + activityId + '?access_token=' + newAccess).then((res : any) => {\r\n                            console.log(\"new access token\", res) ;\r\n                            let valid = false ;\r\n                            let type = \"\" ;\r\n                            if(res.data.type == \"Run\"){\r\n                                valid = true ;\r\n                                type = \"run\" ;\r\n                            }else if(res.data.type == \"Ride\"){\r\n                                valid = true ;\r\n                                type = \"ride\" ;\r\n                            }else if(res.data.type == \"Swim\"){\r\n                                valid = true ;\r\n                                type = \"swim\" ;\r\n                            }else if(res.data.type == \"Workout\"){\r\n                                valid = true ;\r\n                                type = \"lift\" ;\r\n                            }\r\n\r\n                            if(valid){\r\n                                const date = new Date(res.data.start_date) ; \r\n                                const log = {\r\n                                    id: res.data.id,\r\n                                    user: user.email,\r\n                                    activityType: type,\r\n                                    dateComplete: date,\r\n                                    distance: res.data.distance,\r\n                                    name: res.data.name,\r\n                                    speed: res.data.average_speed,\r\n                                    time: res.data.moving_time\r\n                                }\r\n                                //console.log(log) ;\r\n                                this.activityLogsCollection.doc().set(log) ;\r\n                            }\r\n                        })\r\n                    }) ;\r\n                });\r\n            }else{\r\n                const origAccess = user.strava.stravaAccess ;\r\n                axios.get('https://www.strava.com/api/v3/activities/' + activityId + '?access_token=' + origAccess).then((res : any) => {\r\n                    console.log(\"old access token\", res) ;\r\n                    let valid = false ;\r\n                    let type = \"\" ;\r\n                    if(res.data.type == \"Run\"){\r\n                        valid = true ;\r\n                            type = \"run\" ;\r\n                        }else if(res.data.type == \"Ride\"){\r\n                            valid = true ;\r\n                            type = \"ride\" ;\r\n                        }else if(res.data.type == \"Swim\"){\r\n                            valid = true ;\r\n                            type = \"swim\" ;\r\n                        }else if(res.data.type == \"Workout\"){\r\n                            valid = true ;\r\n                            type = \"lift\" ;\r\n                        }\r\n                        if(valid){\r\n                            const date = new Date(res.data.start_date) ; \r\n                            const log = {\r\n                                id: res.data.id,\r\n                                user: user.email,\r\n                                activityType: type,\r\n                                dateComplete: date,\r\n                                distance: res.data.distance,\r\n                                name: res.data.name,\r\n                                speed: res.data.average_speed,\r\n                                time: res.data.moving_time\r\n                            }\r\n                            //console.log(log) ;\r\n                            this.activityLogsCollection.doc().set(log) ;\r\n                        }\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    async logActivity(@Param() log: ActivityLog){\r\n        const data = {\r\n            user: log.email,\r\n            activityType: log.activityType,\r\n            dateComplete: log.dateCompleted,\r\n            distance: log.distance,\r\n            name: log.name,\r\n            speed: log.speed,\r\n            time: log.time\r\n        }\r\n\r\n        await this.activityLogsCollection.doc().set(data)\r\n        .then(results =>{\r\n            return true ;\r\n        });\r\n        return false ;\r\n    }\r\n\r\n    async logManyActivities(@Param() logs: any[]){\r\n        const batch = firestore().batch() ;\r\n        logs.forEach(log => {\r\n            const docRef = this.activityLogsCollection.doc() ;\r\n            batch.set(docRef, log) ;\r\n        });\r\n\r\n        await batch.commit() ;\r\n        return true ;\r\n    }\r\n\r\n    async activityExists(@Param() id: number){\r\n        return await this.activityLogsCollection.where('id', '==', id).get().then(async (result) =>{\r\n            if(result.docs[0]){\r\n                //console.log(result.docs[0]);\r\n                return true ;\r\n            }\r\n            return false ;\r\n        });\r\n    }\r\n\r\n    //activity logs - READ\r\n    async getActivities(accessToken : any) {\r\n        return new Promise((resolve, reject) => {\r\n\r\n            axios.get('https://www.strava.com/api/v3/athlete/activities?per_page=20&access_token=' + accessToken).then((res : any) => {\r\n                resolve(res);\r\n            });\r\n\r\n        });\r\n    }\r\n\r\n    async getNewToken(refreshToken : any, clientId: any, clientSecret: any) {\r\n        return new Promise((resolve, reject) => {\r\n\r\n            const payload = {'client_id': clientId, 'client_secret': clientSecret, 'grant_type': 'refresh_token', 'refresh_token': refreshToken} ;\r\n\r\n\r\n            axios.post('https://www.strava.com/api/v3/oauth/token', payload).then((res : any) => {\r\n                resolve(res);\r\n            });\r\n\r\n        });\r\n    }\r\n\r\n    async getLogs(@Param() email: string){\r\n\r\n        const logs = [] ;\r\n        await this.activityLogsCollection.where('user', '==', email).get().then(async (querySnapshot) =>{\r\n            querySnapshot.docs.forEach((doc) => {\r\n                logs.push(doc.data());\r\n            });\r\n        });\r\n        return logs ;\r\n    }\r\n\r\n    //activity logs - DELETE\r\n    \r\n    //TODO: implement\r\n\r\n    //REQUESTS\r\n\r\n    //requests - CREATE\r\n    async makeConnectionRequest(@Param() sender: string, @Param() receiver: string){\r\n        \r\n        const now = new Date() ;\r\n        const data = {\r\n            sender: sender,\r\n            receiver: receiver,\r\n            time: now\r\n        }\r\n\r\n        await this.buddyRequestsCollection.doc().set(data)\r\n        .then(results =>{\r\n            return true ;\r\n        });\r\n        return false ;\r\n    }\r\n\r\n    \r\n\r\n    //requests - READ\r\n\r\n    //incoming\r\n    async getIncomingRequests(@Param() email: string) {\r\n        const requests = [] ;\r\n        await this.buddyRequestsCollection.where('receiver', '==', email).get().then(async (querySnapshot) =>{\r\n            querySnapshot.docs.forEach((doc) => {\r\n                requests.push(doc.data());\r\n            });\r\n        });\r\n        return requests;\r\n        \r\n        //return this.fs.collection('BuddyRequests', ref => ref.where('receiver', '==', email)).valueChanges();\r\n               \r\n    }\r\n\r\n    //outgoing\r\n    async getOutgoingRequests(@Param() email: string){\r\n        const requests = [] ;\r\n        await this.buddyRequestsCollection.where('sender', '==', email).get().then(async (querySnapshot) =>{\r\n            querySnapshot.docs.forEach((doc) => {\r\n                requests.push(doc.data());\r\n            });\r\n        });\r\n        return requests ;\r\n    }\r\n\r\n    //requests - DELETE\r\n    async deleteConnectionRequest(@Param() receiver: string, @Param() sender: string){\r\n        return this.buddyRequestsCollection.where('sender', '==', sender).where('receiver','==',receiver).get().then(async (result) => {\r\n            if(result.docs[0]) return this.buddyRequestsCollection.doc(result.docs[0].id).delete().then(results => {\r\n                console.log(\"deleted\") ;\r\n                return true ;\r\n            }) ;\r\n            console.log(\"delete problem\") ;\r\n            return false ;\r\n        })\r\n    }\r\n\r\n    //CONNECTIONS\r\n\r\n    //connections - CREATE\r\n    async makeConnection(@Param() user1: string, @Param() user2: string){\r\n\r\n    \r\n        return this.usersCollection.where('email', '==', user1).get().then(async (result) => {\r\n            if(result.docs[0]) return this.usersCollection.doc(result.docs[0].id).update({buddies: this.arrayUnion(user2)}).then(results => {\r\n                return this.usersCollection.where('email', '==', user2).get().then(async (result1) =>{\r\n                    if(result1.docs[0]) return this.usersCollection.doc(result1.docs[0].id).update({buddies: this.arrayUnion(user1)}).then(results =>{\r\n                        return true ;\r\n                    })\r\n                });\r\n            }) ;\r\n            return false ;\r\n        })  \r\n    }\r\n\r\n    //connections - READ\r\n    async getConnections(@Param() email: string){\r\n        const buddies = [] ;\r\n        await this.buddyConnectionsCollection.where('users', 'array-contains', email).get().then(async (querySnapshot) =>{\r\n            querySnapshot.docs.forEach((doc) => {\r\n                buddies.push(doc.data());\r\n            });\r\n        });\r\n        return buddies ;\r\n    }\r\n\r\n    //connections - UPDATE (metric)\r\n    //TODO: implement\r\n\r\n    //connections - DELETE \r\n    async deleteConnection(@Param() user1: string, @Param() user2: string){\r\n        return this.buddyConnectionsCollection.where('user1', '==', user1).where('user2','==',user2).get().then(async (result) => {\r\n            if(result.docs[0]) return this.buddyConnectionsCollection.doc(result.docs[0].id).delete().then(results => {\r\n                return true ;\r\n            }) ;\r\n            return false ;\r\n        })\r\n    }\r\n\r\n    //SCHEDULED WORKOUTS\r\n\r\n    //scheduled workouts - CREATE\r\n    async scheduleWorkout(@Param() workout : ActivitySchedule){\r\n        const data = {\r\n            id: uuid.v1().toString(),\r\n            title: workout.title,\r\n            organiser: workout.email,\r\n            participants: [{email: workout.email, complete: false}],\r\n            startTime: workout.time,\r\n            activityType: workout.activity,\r\n            startPoint: workout.location,\r\n            proposedDistance: workout.distance,\r\n            proposedDuration: workout.duration,\r\n        }\r\n\r\n        await this.scheduledWorkoutCollection.doc().set(data)\r\n        .then(results =>{\r\n            return true ;\r\n        });\r\n        return false ;\r\n    }\r\n\r\n    async getScheduledWorkouts(@Param() email: string){\r\n        const workouts = [] ;\r\n        await this.scheduledWorkoutCollection.where('participants', 'array-contains', {'email': email, 'complete': false}).get().then(async (querySnapshot) =>{\r\n            querySnapshot.docs.forEach((doc) => {\r\n                if(doc.data().startTime >= Date.now()/1000)\r\n                    workouts.push(doc.data());\r\n            });\r\n        });\r\n        return workouts ;\r\n    }\r\n\r\n    async getWorkoutHistory(@Param() email: string){\r\n        const workouts = [] ;\r\n        await this.scheduledWorkoutCollection.where('participants', 'array-contains', {'email': email, 'complete': false}).get().then(async (querySnapshot) =>{\r\n            querySnapshot.docs.forEach((doc) => {\r\n                if(doc.data().startTime < Date.now()/1000){\r\n                    const w = doc.data() ;\r\n                    const c = new Array() ;\r\n                    c.push(false) ;\r\n                    w.complete = c; \r\n                    workouts.push(w);\r\n                }\r\n            });\r\n        });\r\n        await this.scheduledWorkoutCollection.where('participants', 'array-contains', {'email': email, 'complete': true}).get().then(async (querySnapshot) =>{\r\n            querySnapshot.docs.forEach((doc) => {\r\n                if(doc.data().startTime < Date.now()/1000){\r\n                    const w1 = doc.data() ;\r\n                    const c1 = new Array() ;\r\n                    c1.push(true) ;\r\n                    w1.complete = c1; \r\n                    workouts.push(w1);\r\n                }\r\n            });\r\n        });\r\n        return workouts ;\r\n    }\r\n\r\n    async getWorkout(@Param() email: string, @Param() workoutID: string):Promise<any>{\r\n        return this.scheduledWorkoutCollection.where('id', '==', workoutID).get().then(async (result) =>{\r\n            if(result.docs[0]){\r\n                const data = result.docs[0].data() ;\r\n\r\n                const users = [] ;\r\n                const completeVals = [] ;\r\n                data.participants.forEach((user) => {                    \r\n                    users.push(this.login(user.email));\r\n                    completeVals.push(this.login(user.complete)) ;\r\n                })\r\n                data.participants = users ;\r\n                data.complete = completeVals ;\r\n\r\n                return data ;\r\n                //return result.docs[0].data() ;\r\n            } \r\n            return false ;\r\n        });\r\n    }\r\n    //scheduled workouts - UPDATE\r\n    //TODO: implement\r\n\r\n    //workout invite - CREATE\r\n    async createInvite(@Param() email: string, @Param() workout: string){\r\n\r\n            const data = {\r\n                sender: email,\r\n                receivers: [],\r\n                workout: workout\r\n            }\r\n            await this.workoutInvitesCollection.doc().set(data).then(results =>{\r\n                return true ;\r\n            });\r\n            return false;\r\n    }\r\n\r\n    //workout invite - SEND\r\n    async sendInvite(@Param() sender: string, @Param() receivers: string[], @Param() workout: string){\r\n            return this.workoutInvitesCollection.where('sender', '==', sender).where('workout','==',workout).get().then(async (result) => {\r\n                if(result.docs[0]){\r\n                    console.log(\"hello\")\r\n                    for(let i = 0; i < receivers.length; i++){\r\n                        this.workoutInvitesCollection.doc(result.docs[0].id).update({receivers: this.arrayUnion(receivers[i])}) ;\r\n                    }  \r\n                    return true ;\r\n                }                  \r\n                return false ;\r\n            }) \r\n    }\r\n\r\n    //workout invite - ACCEPT\r\n    async acceptInvite(@Param() user: string, @Param() sender: string, @Param() workout: string){\r\n            return this.workoutInvitesCollection.where('sender', '==', sender).where('workout','==',workout).get().then(async (result) => {\r\n                if(result.docs[0]) {\r\n                    return this.workoutInvitesCollection.doc(result.docs[0].id).update({receivers: this.arrayRemove(user)}).then(results => {\r\n                    return this.scheduledWorkoutCollection.where(\"id\",\"==\",workout).get().then(async (res) => {\r\n                        return this.scheduledWorkoutCollection.doc(res.docs[0].id).update({participants: this.arrayUnion({'email': user, 'complete': false})}).then(result =>{\r\n                            return true ;\r\n                        }) ;\r\n                    } );\r\n                }) ;\r\n                };\r\n            }); \r\n            return false; \r\n    }\r\n\r\n    //workout invite - REJECT\r\n    async rejectInvite(@Param() user: string, @Param() sender: string, @Param() workoutID: string){\r\n        if(workoutID != null){\r\n            return this.workoutInvitesCollection.where('sender', '==', sender).where('workout','==',workoutID).get().then(async (result) => {\r\n                if(result.docs[0]) return this.workoutInvitesCollection.doc(result.docs[0].id).update({receivers: this.arrayRemove(user)}).then(results => {\r\n                    return true;\r\n                }) ;\r\n                return false ;\r\n            }); \r\n        }\r\n    }\r\n\r\n    async getIncomingInvites(@Param() user: string){\r\n        const invites = [] ;\r\n        await this.workoutInvitesCollection.where('receivers', 'array-contains', user).get().then(async (querySnapshot) =>{\r\n            querySnapshot.docs.forEach((doc) => {\r\n\r\n                // const recs = [] ;\r\n                // doc.data().receivers.forEach((rec) => {\r\n                //     recs.push(this.login(rec)) ;\r\n                // })\r\n                const data = {\r\n                    sender: doc.data().sender,\r\n                    receivers: doc.data().receivers,\r\n                    workout: this.getWorkout(user, doc.data().workout)\r\n                }\r\n                invites.push(data);\r\n            });\r\n        });\r\n        return invites ;\r\n    }\r\n\r\n    async getOutgoingInvites(@Param() user: string){\r\n        const invites = [] ;\r\n        await this.workoutInvitesCollection.where('sender', '==', user).get().then(async (querySnapshot) =>{\r\n            querySnapshot.docs.forEach((doc) => {\r\n                const data = {\r\n                    sender: doc.data().sender,\r\n                    receivers: doc.data().receivers,\r\n                    workout: this.getWorkout(user, doc.data().workout)\r\n                }\r\n                invites.push(data);\r\n            })\r\n        });\r\n        return invites ;\r\n    }\r\n\r\n    //complete a workout\r\n    async completeWorkout(@Param() workoutID: string){\r\n        //change status to complete\r\n        if(workoutID != null){\r\n            return this.scheduledWorkoutCollection.where(\"id\", \"==\", workoutID).get().then(async (result) => {\r\n                return this.scheduledWorkoutCollection.doc(result.docs[0].id).update({complete: true})\r\n            }); \r\n        }\r\n\r\n    }\r\n}\r\n","export * from './lib/api-internal-api-service-training-buddy-service.module';\r\nexport * from './lib/training-buddy-service.service'\r\nexport * from './lib/local.strategy'\r\nexport * from './lib/login.guard'\r\nexport * from './lib/jwt-strategy'\r\nexport * from './lib/jwt-auth.guard'","import { Module } from '@nestjs/common';\r\nimport { TrainingBuddyServiceService } from './training-buddy-service.service';\r\nimport { LocalStrategy } from './local.strategy';\r\nimport { PassportModule } from '@nestjs/passport';\r\nimport { LoginGuard } from './login.guard';\r\nimport { JwtStrategy } from './jwt-strategy';\r\nimport { JwtAuthGuard} from './jwt-auth.guard';\r\nimport {CollaborativeFilter} from 'collaborative-filter'\r\nimport { JwtModule } from '@nestjs/jwt';\r\nimport { ApiInternalApiRepositoryDataAccessService } from '@training-buddy/api/internal-api/repository/data-access';\r\nimport {UserEntity} from '@training-buddy/api/internal-api/api/shared/interfaces/data-access';\r\n@Module({\r\n  controllers: [],\r\n  imports: [PassportModule, JwtModule.register({\r\n    signOptions: { expiresIn: '86400s'},\r\n    secret:\"hide\"//TODO hide this \r\n  }),], \r\n  providers: [TrainingBuddyServiceService, LocalStrategy, LoginGuard , JwtStrategy , JwtAuthGuard, ApiInternalApiRepositoryDataAccessService, UserEntity],\r\n  exports: [TrainingBuddyServiceService,JwtModule.register({\r\n    signOptions: { expiresIn: '86400s'},\r\n    secret:\"hide\"//TODO hide this \r\n  }),],\r\n})\r\nexport class ApiInternalApiServiceTrainingBuddyServiceModule {}\r\n","import {Injectable , ExecutionContext } from '@nestjs/common'\r\nimport {GqlExecutionContext} from '@nestjs/graphql'\r\nimport {AuthGuard} from '@nestjs/passport'\r\n@Injectable()\r\nexport class JwtAuthGuard extends AuthGuard ('jwt'){\r\n  /**\r\n   * \r\n   * @param context \r\n   * @returns request body\r\n   */\r\n  getRequest(context: ExecutionContext){\r\n    const ctx = GqlExecutionContext.create(context);\r\n    return ctx.getContext().req;\r\n  }\r\n  \r\n}\r\n","import { ExtractJwt , Strategy } from 'passport-jwt'\r\nimport { PassportStrategy } from '@nestjs/passport'\r\nimport { Injectable} from '@nestjs/common'\r\n@Injectable()\r\nexport class JwtStrategy extends PassportStrategy (Strategy) {\r\n    constructor(){\r\n        super({\r\n            jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\r\n            ignoreExpiration: false,\r\n            secretOrKey: 'hide', //TODO hide this in evn secrets\r\n        });\r\n    }\r\n    /**\r\n     * \r\n     * @param payload \r\n     * @returns \r\n     */\r\n    async validate(payload : any){ \r\n        return { email: payload.email, username: payload.username};\r\n    }\r\n}\r\n","import { Injectable , UnauthorizedException} from '@nestjs/common';\r\nimport {Strategy} from 'passport-local';\r\nimport {PassportStrategy} from '@nestjs/passport';\r\nimport { TrainingBuddyServiceService } from './training-buddy-service.service'\r\n\r\n@Injectable()\r\nexport class LocalStrategy extends PassportStrategy(Strategy){\r\n    /**\r\n     * \r\n     * @param trainingBuddyServiceService \r\n     */\r\n    constructor(private trainingBuddyServiceService: TrainingBuddyServiceService ){    \r\n        super();\r\n    }\r\n    /**\r\n     * \r\n     * @param email \r\n     * @param password \r\n     * @returns  UnauthorizedException || UserEntity\r\n     */\r\n    async validate(email: string , password: string): Promise<any>{\r\n        const user = await this.trainingBuddyServiceService.validateUser(email , password);\r\n        if(!user){\r\n           return \"User has no Account\"\r\n        }\r\n        return user;\r\n    }\r\n}\r\n","import { ExecutionContext, Injectable } from '@nestjs/common';\r\nimport { GqlExecutionContext } from '@nestjs/graphql';\r\nimport {AuthGuard} from '@nestjs/passport';\r\n\r\n\r\n@Injectable()\r\nexport class LoginGuard extends AuthGuard ('local'){\r\n constructor(){\r\n   super();\r\n }\r\n /**\r\n  * \r\n  * @param context \r\n  * @returns RequestBody\r\n  */\r\n getRequest(context: ExecutionContext){\r\n   const ctx = GqlExecutionContext.create(context);\r\n   const request = ctx.getContext();\r\n   request.body = ctx.getArgs().loginInput;\r\n   return request;\r\n }\r\n \r\n}\r\n","import { Injectable} from '@nestjs/common';\r\nimport {UserDto , UserEntity,ActivitySchedule,  ErrorMessage, ActivityStat,ActivityLog ,UpdateUser, Userconfig, Invite} from '@training-buddy/api/internal-api/api/shared/interfaces/data-access';\r\nimport {JwtService} from '@nestjs/jwt'\r\nimport * as bcrypt from 'bcrypt';\r\nimport { sha256 } from 'js-sha256';\r\nimport * as SendGrid from '@sendgrid/mail';\r\nimport { ApiInternalApiRepositoryDataAccessService } from '@training-buddy/api/internal-api/repository/data-access';\r\nlet recommended : any [] =[]\r\n@Injectable()\r\nexport class TrainingBuddyServiceService {\r\n   \r\n   \r\n    \r\n   \r\n    /**\r\n     * \r\n     * @param jwtService \r\n     */\r\n    constructor(private jwtService : JwtService, private repoService : ApiInternalApiRepositoryDataAccessService , private user : UserEntity){}\r\n    // async sendEmail(email : string , user : UserEntity) {\r\n    //     const apiKey = `${process.env.SENDGRID_API_KEY}`;\r\n    //     console.log(apiKey)\r\n    //     SendGrid.setApiKey(apiKey);\r\n    //     const mail = {\r\n    //         to: email,\r\n    //         subject: 'Activity Invite From '+ user.userName ,\r\n    //         from: 'trainingbuddy2022@gmail.com',\r\n    //         text: 'Hello you have been invited to a work out by ' + user.userName,\r\n    //         html: '<h1>Hello World from NestJS Sendgrid</h1>'\r\n    //     }\r\n    //     SendGrid.\r\n    //     send(mail)\r\n    //     .then(() => {\r\n    //         console.log('Email sent')\r\n    //     })\r\n    //     .catch((error) => {\r\n    //         console.error(error)\r\n    //     })\r\n    // }\r\n    /**\r\n     * \r\n     * @param email \r\n     * @param password \r\n     * @returns null || UserEntity\r\n     */\r\n    async validateUser(email: string , password: string):Promise<any> {\r\n        const user = await this.findOne(email);\r\n        let valid = false;\r\n        if(user){\r\n            const encrypted = sha256(password);\r\n            valid = await bcrypt.compare(encrypted, user?.password)\r\n        }\r\n        if(user && valid){ \r\n            const{password , ...result} = user;\r\n            return result;\r\n        }\r\n        return null;\r\n    }\r\n    /**\r\n     * \r\n     * @param email \r\n     * @returns Promise UserEntity\r\n     */\r\n    async findOne(email: string): Promise<any>{\r\n        let total = 0;\r\n\r\n        const person =  await this.repoService.login(email);\r\n        if(person){\r\n            if(person.ratings.length > 0){\r\n                    person.ratings.forEach(element => {\r\n                        total += element;\r\n                });\r\n                person.ratings = total/person.ratings.length;\r\n            }\r\n        }\r\n        return person;\r\n    }\r\n    /**\r\n     * \r\n     * @param userdto \r\n     * @returns ErrorMessage\r\n     */\r\n    async signup(userdto : UserDto){\r\n        let user = await this.findOne(userdto.email);\r\n        if(await user){\r\n            const item = new ErrorMessage;\r\n            item.message = \"User Already Exists failure\";\r\n            return item;\r\n        }\r\n        else{\r\n            const encrypted = sha256(userdto.password);\r\n            const password = await bcrypt.hash(encrypted, 10)\r\n            user = {...userdto, password };\r\n            const ret = await this.repoService.createUser(user);\r\n            const item = new ErrorMessage;\r\n            item.message = ret.id;\r\n            return item;\r\n        }\r\n    }\r\n    /**\r\n     * @param string\r\n     * @returns Array Of UserEntity\r\n     */\r\n    async getAll(email:string ){\r\n\r\n        const arr = await this.repoService.findAll(email);\r\n    \r\n\r\n        let distance = 0;\r\n        let longitude = 0;\r\n        let latitude = 0;\r\n        const people = [];\r\n        for(let i = 0; i < arr.length; i++){\r\n            if(arr[i].email=== email){\r\n               distance=  arr[i].distance\r\n               longitude = arr[i].longitude\r\n               latitude = arr[i].latitude\r\n            }\r\n        }\r\n        for(let i = 0; i < arr.length; i++){\r\n            if(arr[i].email!=email && arr[i].metrics!=null){\r\n                if(await this.calculatedistance(arr[i].latitude, arr[i].longitude, latitude, longitude)<= distance){\r\n                    people.push(arr[i]);\r\n                }\r\n            }\r\n        }\r\n        people.push(await this.findOne(email));\r\n        return this.collaborativeFiltering(people , email);\r\n\r\n\r\n   \r\n\r\n   \r\n       \r\n    }\r\n    /**\r\n     * \r\n     * @param user \r\n     * @returns \r\n     */\r\n    async login(user:any){\r\n        {\r\n            return {\r\n                accessToken: this.jwtService.sign({user: user.userName , email: user.email}),\r\n                user: user\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * \r\n     * @param user \r\n     * @returns Response\r\n     */\r\n    async updateUser(user:UpdateUser){\r\n        const users = await this.findOne(user.oldemail)\r\n        const item = new ErrorMessage;\r\n        let response; \r\n        if(users){\r\n            if(user.cellNumber){\r\n                response = await this.repoService.updateCellNumber(user.cellNumber, user.oldemail);\r\n            }\r\n            if(user.email){\r\n                response = await this.repoService.updateEmail(user.email, user.oldemail);\r\n            }\r\n            if(user.location){\r\n                response = await this.repoService.updateLocation(user.location, user.oldemail);\r\n            }\r\n            if(user.password){\r\n                const password = await bcrypt.hash(user.password, 10)\r\n                response = await this.repoService.updatePassword(password, user.oldemail);\r\n            }\r\n            if(user.userName){\r\n                response = await this.repoService.updateUserName(user.userName, user.oldemail);\r\n            }\r\n            if(user.userSurname){\r\n                response = await this.repoService.updateUserSurname(user.userSurname, user.oldemail);\r\n            }\r\n            if(user.distance){\r\n               response = await this.repoService.updateDistance( user.distance, user.userSurname);\r\n            }\r\n            if(user.longitude){\r\n                response = await this.repoService.updateLongitude( user.longitude, user.userSurname);\r\n            }\r\n            if(user.latitude){\r\n                response = await this.repoService.updateLatitude( user.latitude, user.userSurname);\r\n            }\r\n            if(user.running){\r\n                response = await this.repoService.updateRunning( user.running, user.userSurname);\r\n            }\r\n            if(user.riding){\r\n                response = await this.repoService.updateRiding( user.riding, user.userSurname);\r\n            }\r\n            if(user.swimming){\r\n                response = await this.repoService.updateSwimming( user.swimming,user.userSurname);\r\n            }\r\n            if(user.weightLifting){\r\n                response = await this.repoService.updateLifting( user.weightLifting,user.userSurname);\r\n            }\r\n            if(user.bio){\r\n                response = await this.repoService.updateBio( user.bio, user.userSurname);\r\n            }\r\n            if(response){\r\n                item.message =\"Successful\";\r\n                return item;\r\n            }\r\n            item.message =\"failure\";\r\n            return item;\r\n        \r\n        }else{\r\n            item.message = \"failure\"\r\n            return item;\r\n        }\r\n\r\n    }\r\n    /**\r\n     * \r\n     * @param config \r\n     * @return ErrorMessage\r\n     */\r\n    async userConfig(config: Userconfig){\r\n        const val =  await this.repoService.userConfig(config);\r\n        const item = new ErrorMessage;\r\n        if(val == false){\r\n            item.message = \"failure\"\r\n            return item;\r\n\r\n        }\r\n        else{\r\n            item.message = \"success\"\r\n            return item;\r\n        }\r\n    }\r\n    /**\r\n     * \r\n     * @param lat1 \r\n     * @param lon1 \r\n     * @param lat2 \r\n     * @param lon2 \r\n     * @returns distance \r\n     */\r\n    async calculatedistance(lat1:number, lon1:number , lat2:number , lon2:number){\r\n        const  R = 6371; // km\r\n        const dLat = this.toRad(lat2-lat1);\r\n        const  dLon = this.toRad(lon2-lon1);\r\n        const  latone = this.toRad(lat1);\r\n        const  lattwo = this.toRad(lat2);\r\n  \r\n        const  a = Math.sin(dLat/2) * Math.sin(dLat/2) +\r\n          Math.sin(dLon/2) * Math.sin(dLon/2) * Math.cos(latone) * Math.cos(lattwo); \r\n        const  c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a)); \r\n        const  d = R * c;\r\n        return d;\r\n\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param Value \r\n     * @returns radians\r\n     */\r\n    toRad(Value):number\r\n    {\r\n        return Value * Math.PI / 180;\r\n    }\r\n    \r\n    /**\r\n     * \r\n     * @param actLog \r\n     * @return ErrorMessage\r\n     */\r\n    async activityLog(actLog :ActivityLog ){\r\n       const user = await this.findOne(actLog.email);\r\n       const item = new ErrorMessage;\r\n       if(!user){\r\n            item.message = \"failure\"\r\n            return item;\r\n\r\n        }else{\r\n            await this.repoService.logActivity(actLog);\r\n            item.message = \"success\"\r\n            return item;\r\n        }\r\n    }\r\n    /**\r\n     * \r\n     * @param userID \r\n     * @returns \r\n     */\r\n    async getUser(userID:string){\r\n        return this.repoService.getUser(userID)\r\n    }\r\n    /**\r\n     * \r\n     * @param actSchedule \r\n     * @return ErrorMessage\r\n     */\r\n    async activitySchedule(actSchedule:ActivitySchedule){\r\n        const user = await this.findOne(actSchedule.email);\r\n       const item = new ErrorMessage;\r\n       if(!user){\r\n            item.message = \"failure\"\r\n            return item;\r\n        }else{\r\n            await this.repoService.scheduleWorkout(actSchedule);\r\n            item.message = \"success\"\r\n            //TODO broadcast to all buddies \r\n            return item;\r\n        }\r\n        \r\n    }\r\n    /**\r\n     * \r\n     * @param userEmail \r\n     * @param otherEmail \r\n     * @return ErrorMessage\r\n     */\r\n    async accept(otherEmail: string, userEmail: string) {\r\n        let res =  await this.repoService.deleteConnectionRequest(userEmail, otherEmail);\r\n       const item = new ErrorMessage;\r\n       if(res === false){\r\n            item.message = \"failure to deleteConnectionRequest\"\r\n            return item;\r\n        }\r\n        else{\r\n                res =  await this.repoService.makeConnection(userEmail, otherEmail);\r\n                item.message = \"Success Connection made\"\r\n                return item;\r\n            }   \r\n    }\r\n    /**\r\n     * \r\n     * @param userEmail \r\n     * @param otherEmail \r\n     * @return ErrorMessage\r\n     */\r\n    async reject(userEmail: string, otherEmail: string) {\r\n        const res =  await this.repoService.deleteConnectionRequest(userEmail, otherEmail);\r\n       const item = new ErrorMessage;\r\n       if(res === false){\r\n            item.message = \"failure to deleteConnectionRequest\"\r\n            return item;\r\n        }\r\n        else{\r\n            item.message = \"Success User Rejected\"\r\n            return item;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param userEmail \r\n     * @param otherEmail\r\n     * @return ErrorMessage \r\n     */\r\n    async sendRequest(userEmail: string, otherEmail: string) {\r\n        const user1 = await this.findOne(userEmail);\r\n        const user2 = await this.findOne(otherEmail);\r\n       const item = new ErrorMessage;\r\n       if(!user1 && !user2){\r\n            item.message = \"failure to connect request\"\r\n            return item;\r\n        }\r\n        else{\r\n            const check = await this.getIncoming(otherEmail);\r\n            for(let i = 0; i < check.length; i++){\r\n                if(check[i].email == userEmail){\r\n                    item.message = \"Failure Sent Request already\"\r\n                    return item;\r\n                }\r\n            }\r\n            await this.repoService.makeConnectionRequest(userEmail, otherEmail);\r\n            item.message = \"Success User Connection Sent\"\r\n            return item;\r\n        }\r\n    }\r\n    /**\r\n     * \r\n     * @param userEmail \r\n     * @return [ResponseLog]\r\n     */\r\n    async getLogs(userEmail: string) {\r\n        let arr ;\r\n        const user = await this.findOne(userEmail);\r\n       if(!user){\r\n            return arr;\r\n        }else{\r\n            arr = await this.repoService.getLogs(userEmail);\r\n            return arr;\r\n        }\r\n    }\r\n    /**\r\n     * \r\n     * @param userEmail \r\n     * @return [ResponseWorkout]\r\n     */\r\n    async getScheduleWorkout(userEmail: string) {\r\n        let arr =[];\r\n        const user = await this.findOne(userEmail);\r\n       if(!user){\r\n            return arr;\r\n        }else{\r\n            arr = await this.repoService.getScheduledWorkouts(userEmail);\r\n            return arr;\r\n        }\r\n    }\r\n    /**\r\n     * \r\n     * @param userEmail \r\n     * @return [ResponseWorkout]\r\n     */\r\n    async getWorkoutHistory(userEmail: string) {\r\n        let arr =[];\r\n        const user = await this.findOne(userEmail);\r\n         if(!user){\r\n            return arr;\r\n        }\r\n        else{\r\n            arr = await this.repoService.getWorkoutHistory(userEmail);\r\n            return arr;\r\n        }\r\n    }\r\n    /**\r\n     * \r\n     * @param userEmail \r\n     * @return [userEntities]\r\n     */\r\n    async getConnections(userEmail: string) {\r\n        const user = await this.findOne(userEmail);\r\n        const arr=[];\r\n        if(user){\r\n            if(!user.buddies){\r\n                return arr;\r\n            }\r\n            for(let i = 0; i < user.buddies.length; i++){\r\n                arr.push(await this.findOne(user.buddies[i]))\r\n            }\r\n            return arr;\r\n        }\r\n        else return arr;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param userEmail \r\n     * [userEntities]\r\n     */\r\n    async getOutgoing(userEmail: string) {\r\n        const user = await this.findOne(userEmail);\r\n        const outgoing =[]\r\n        if(user){\r\n            const arr= await this.repoService.getOutgoingRequests(userEmail)\r\n            if(arr.length<=0){\r\n                return arr;\r\n            }\r\n            for(let i = 0; i < arr.length; i++){\r\n                outgoing.push(await this.findOne(arr[i].receiver))\r\n            }\r\n            return outgoing;\r\n        }\r\n        else return outgoing;\r\n    }\r\n    /**\r\n     * \r\n     * @param userEmail \r\n     */\r\n    async getIncoming(userEmail: string) {\r\n        const user = await this.findOne(userEmail);\r\n        const outgoing =[]\r\n        if(user){\r\n            const arr= await this.repoService.getIncomingRequests(userEmail)\r\n            if(arr.length<=0){\r\n                return arr;\r\n            }\r\n            for(let i = 0; i < arr.length; i++){\r\n                outgoing.push(await this.findOne(arr[i].sender))\r\n            }\r\n            return outgoing;\r\n        }\r\n        else return outgoing;\r\n    }\r\n    /**\r\n     * \r\n     * @param email \r\n     * @param access \r\n     * @param refresh \r\n     * @returns ErrorMessage\r\n     */\r\n    async saveTokens(email:string  , access:string , refresh:string, exp: number, clientId: any, clientSecret : any, id:any){\r\n        const user = await this.findOne(email);\r\n        const item = new ErrorMessage;\r\n        if(!user ){\r\n             item.message = \"failure no user\"\r\n             return item;\r\n         }\r\n         else{\r\n             await this.repoService.saveTokens(email , access , refresh, exp, clientId, clientSecret, id)\r\n             item.message = \"Success User Tokens Saved \"\r\n             return item;\r\n         }\r\n    }\r\n    /**\r\n     * \r\n     * @param email \r\n     * @returns tokens\r\n     */\r\n    async getToken(email:string){\r\n        const user = await this.findOne(email);\r\n        const item = new ErrorMessage;\r\n        if(!user ){\r\n             return item;\r\n             \r\n         }\r\n         else{\r\n            return await this.repoService.getTokens(email)\r\n          \r\n         }\r\n\r\n\r\n    }\r\n    /**\r\n     * \r\n     * @param email \r\n     * @param startTime \r\n     * @returns ErrorMessage\r\n     */\r\n    async createInvite(email:string , workoutID: string){\r\n        const user = await this.findOne(email);\r\n        const item = new ErrorMessage;\r\n        if(!user ){\r\n            item.message =\"failure\"\r\n             return item;\r\n         }\r\n         else{\r\n            await this.repoService.createInvite(email, workoutID)\r\n            item.message =\"success\"\r\n            return item;\r\n\r\n         }\r\n    }\r\n    /**\r\n     * \r\n     * @param email \r\n     * @param receiver \r\n     * @param startTime \r\n     * @returns ErrorMessage\r\n     */\r\n    async sendInvite(email:string ,receiver:string ,  workoutID: string){\r\n        const user = await this.findOne(email);\r\n        const item = new ErrorMessage;\r\n        const arr = []\r\n        arr.push(receiver) \r\n        if(!user ){\r\n             return item;\r\n         }\r\n         else{\r\n            const val = await this.repoService.sendInvite(email,arr,workoutID)\r\n            if(val){\r\n                item.message = \"Success\";\r\n               // this.sendEmail(email , user);\r\n                return item\r\n            }else{\r\n                item.message = \"Failure\";\r\n                return item\r\n            }\r\n         }\r\n    }\r\n    /**\r\n     * \r\n     * @param email \r\n     * @param sender \r\n     * @param startTime \r\n     * @returns \r\n     */\r\n    async acceptInvite(email:string ,sender:string ,  workoutID: string){\r\n        const user = await this.findOne(email);\r\n        const item = new ErrorMessage;\r\n\r\n        if(!user ){\r\n             return item;\r\n         }\r\n         else{\r\n            const val = await this.repoService.acceptInvite(email,sender,workoutID)\r\n            if(val){\r\n                item.message = \"Success\";\r\n                return item\r\n            }else{\r\n                item.message = \"Failure\";\r\n                return item\r\n            }\r\n         }\r\n    }\r\n    /**\r\n     * \r\n     * @param email \r\n     * @param sender \r\n     * @param startTime \r\n     * @returns \r\n     */\r\n    async rejectInvite(email:string ,sender:string ,  workoutID: string){\r\n        const user = await this.findOne(email);\r\n        const item = new ErrorMessage;\r\n\r\n        if(!user ){\r\n             return item;\r\n         }\r\n         else{\r\n            const val = await this.repoService.rejectInvite(email,sender,workoutID)\r\n            if(val){\r\n                item.message = \"Success\";\r\n                return item\r\n            }else{\r\n                item.message = \"Failure\";\r\n                return item\r\n            }\r\n         }\r\n    }\r\n    /**\r\n     * \r\n     * @param email \r\n     * @returns \r\n     */\r\n    async getIncomingInvites(email:string){\r\n       const user = await this.findOne(email);\r\n       if(!user){\r\n            return new Invite;\r\n        }else{\r\n            return await this.repoService.getIncomingInvites(email)    \r\n        }\r\n    }\r\n    /**\r\n     * \r\n     * @param email \r\n     * @returns \r\n     */\r\n    async getOutgoingInvites(email:string){\r\n        const user = await this.findOne(email);\r\n        if(!user){\r\n             return new Invite;\r\n         }else{\r\n             return await this.repoService.getOutgoingInvites(email)    \r\n         }\r\n    }\r\n    /**\r\n     * \r\n     * @param userEmail \r\n     * @param startTime \r\n     * @returns ResponseWorkout \r\n     */\r\n    async getWorkout(userEmail: string , workoutID) {\r\n        const arr =[];\r\n        const user = await this.findOne(userEmail);\r\n       if(!user){\r\n            return arr;\r\n        }else{\r\n            return await this.repoService.getWorkout(userEmail,workoutID);\r\n           \r\n        }\r\n    }\r\n    /**\r\n     * \r\n     * @param dataset \r\n     * @returns newDataset\r\n     */\r\n    cleanDataset (dataset){\r\n        const  newDataset = {};\r\n        for(const i in dataset){\r\n            const email = dataset[i].email;\r\n            newDataset[email] = dataset[i].metrics;\r\n        }\r\n        return newDataset;\r\n    }\r\n    len(obj){\r\n        let len=0;\r\n        for(const i in obj){\r\n            len++\r\n        }\r\n        return len;\r\n    }\r\n    pearson_correlation(dataset,p1,p2){\r\n        const existp1p2 = {};\r\n        for(const item in dataset[p1]){\r\n                    if(item in dataset[p2]){\r\n                        existp1p2[item] = 1\r\n                    }\r\n                }\r\n               const num_existence = this.len(existp1p2);\r\n        if(num_existence ==0) return 0;\r\n                let p1_sum=0,\r\n                    p2_sum=0,\r\n                    p1_sq_sum=0,\r\n                    p2_sq_sum=0,\r\n                    prod_p1p2 = 0;\r\n                for(const item in existp1p2){\r\n                    p1_sum += dataset[p1][item];\r\n                    p2_sum += dataset[p2][item];\r\n                    p1_sq_sum += Math.pow(dataset[p1][item],2);\r\n                    p2_sq_sum += Math.pow(dataset[p2][item],2);\r\n                    prod_p1p2 += dataset[p1][item]*dataset[p2][item];\r\n                }\r\n                const numerator =prod_p1p2 - (p1_sum*p2_sum/num_existence);\r\n                const  st1 = p1_sq_sum - Math.pow(p1_sum,2)/num_existence;\r\n                const  st2 = p2_sq_sum -Math.pow(p2_sum,2)/num_existence;\r\n                const  denominator = Math.sqrt(st1*st2);\r\n        if(denominator ==0) return 0;\r\n                else {\r\n                    const val = numerator / denominator;\r\n                    recommended.push({name:p2, value:val});\r\n                    return val;\r\n                }\r\n    }\r\n    getRecommendations(dataset,person){\r\n        const totals = {};\r\n        const simSums = {};\r\n        for(const other in dataset){\r\n            if(other == person) continue;\r\n            const sim = this.pearson_correlation(dataset,person,other);\r\n            if(sim<=0) continue;\r\n            for(const item in dataset[other]){\r\n                if(item in dataset[person]) continue;\r\n                totals[item] = totals[item] || 0;\r\n                totals[item] += dataset[other][item]*sim;\r\n                simSums[item] = simSums[item] || 0;\r\n                simSums[item] += sim;\r\n            }\r\n        }\r\n        const rankings: any= [];\r\n        for(const item in totals){\r\n            rankings.push([totals[item],item]);\r\n        }\r\n        rankings.sort();\r\n        rankings.reverse();\r\n        return rankings;\r\n    }\r\n   getFullDatasetFromRecommended(dataset,recommended){\r\n        const newDataset: any= []\r\n        recommended.forEach(i =>{\r\n            if(i.value > 0.50){\r\n                dataset.forEach(element => {\r\n                    if(element.email == i.name){\r\n                        newDataset.push(element)\r\n                    }\r\n                })\r\n            }\r\n        }\r\n    )\r\n    return newDataset;\r\n   }\r\n   sortRecommended(recommended){\r\n    recommended.sort(function(a,b){\r\n        return b.value - a.value;\r\n    })\r\n    return recommended;\r\n    }\r\n\r\n    \r\n    async collaborativeFiltering(people: any[]  , email: string){\r\n        if(people.length <=0){\r\n            return people;\r\n        }\r\n        recommended = []\r\n        this.getRecommendations(this.cleanDataset(people),email)\r\n        this.sortRecommended(recommended)\r\n        \r\n        const newset = this.getFullDatasetFromRecommended(people,recommended)\r\n        const dataset = this.removeUser(newset,email)\r\n        if(dataset.length <=0){\r\n            const val =this.removeUser(people,email);\r\n            return val\r\n        }\r\n    return dataset;\r\n    }\r\n    removeUser(dataset,email){\r\n        const newDataset = [];\r\n        dataset.forEach(element => {\r\n            if(element.email != email){\r\n                newDataset.push(element)\r\n            }\r\n        });\r\n        return newDataset;\r\n    }\r\n     /**\r\n     * \r\n     * @param workoutID \r\n     * @returns ErrorMessage\r\n     */\r\n      async completeWorkout(workoutID: string) {\r\n        const val = await this.repoService.completeWorkout(workoutID);\r\n        const item = new ErrorMessage;\r\n       if(val==null) {\r\n           item.message = \"failure\"\r\n           return item;\r\n       }else{\r\n              item.message = \"success\"\r\n              return item;\r\n       }\r\n    }\r\n    async addRating(userEmail: string, rating: number) {\r\n        const val = await this.repoService.addRating(userEmail, rating);\r\n        const item = new ErrorMessage;\r\n         if(val==false) {\r\n           item.message = \"failure\"\r\n           return item;\r\n        }\r\n        else{\r\n            item.message = \"success\"\r\n            return item;\r\n        }\r\n    }\r\n  \r\n\r\n\r\n}\r\n","export * from './lib/api-shell-feature.module';\r\n","import { FeatureModule as ApiExampleFeatureModule } from '@training-buddy/api/example/api/feature';\r\nimport { ApiInternalApiApiTrainingBuddyApiModule as TrainingBuddyApi} from '@training-buddy/api/internal-api/api/training-buddy-api';\r\nimport { Module } from '@nestjs/common';\r\nimport { GraphQLModule } from '@nestjs/graphql';\r\nimport { ApolloDriver, ApolloDriverConfig } from '@nestjs/apollo';\r\n@Module({\r\n  imports: [\r\n    ApiExampleFeatureModule,\r\n    TrainingBuddyApi,\r\n    GraphQLModule.forRoot<ApolloDriverConfig>({\r\n      autoSchemaFile: true,\r\n      driver: ApolloDriver,\r\n      installSubscriptionHandlers: true,\r\n      subscriptions: {\r\n        'graphql-ws':true,\r\n        'subscriptions-transport-ws':true\r\n      },\r\n    }),],\r\n})\r\nexport class ApiShellFeatureModule {}\r\n","module.exports = require(\"@nestjs/apollo\");","module.exports = require(\"@nestjs/common\");","module.exports = require(\"@nestjs/core\");","module.exports = require(\"@nestjs/graphql\");","module.exports = require(\"@nestjs/jwt\");","module.exports = require(\"@nestjs/passport\");","module.exports = require(\"@nestjs/platform-express\");","module.exports = require(\"axios\");","module.exports = require(\"bcrypt\");","module.exports = require(\"cors\");","module.exports = require(\"express\");","module.exports = require(\"firebase-admin\");","module.exports = require(\"firebase-functions\");","module.exports = require(\"graphql-subscriptions\");","module.exports = require(\"js-sha256\");","module.exports = require(\"passport-jwt\");","module.exports = require(\"passport-local\");","module.exports = require(\"rxjs\");","module.exports = require(\"tslib\");","module.exports = require(\"uuid\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(\"./apps/api/src/main.ts\");\n",""],"names":[],"sourceRoot":""}